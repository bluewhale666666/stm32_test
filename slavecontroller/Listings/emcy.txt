; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\emcy.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\emcy.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\etherCAT -I.\Power -I.\CRC -IC:\Users\LENOVO\Desktop\slavecontroller\RTE -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx\STCubeGenerated\Inc -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\STM32F4xx_HAL_Driver\Inc -ISTCubeGenerated\Inc -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F407xx --omf_browse=.\objects\emcy.crf etherCAT\emcy.c]
                          THUMB

                          AREA ||i.EMCY_ContinueInd||, CODE, READONLY, ALIGN=1

                  EMCY_ContinueInd PROC
;;;248    
;;;249    void EMCY_ContinueInd(TMBX MBXMEM * pMbx)
000000  b570              PUSH     {r4-r6,lr}
;;;250    {
000002  4605              MOV      r5,r0
;;;251        TEMCYMESSAGE EMCYMEM *pEmcy = GetOutOfSendEmcyQueue();
000004  f7fffffe          BL       GetOutOfSendEmcyQueue
000008  4604              MOV      r4,r0
;;;252        
;;;253        if (pEmcy != NULL)
00000a  b114              CBZ      r4,|L1.18|
;;;254        {
;;;255            /* send next emergency message */
;;;256            EMCY_SendEmergency( pEmcy );
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       EMCY_SendEmergency
                  |L1.18|
;;;257        }
;;;258    }
000012  bd70              POP      {r4-r6,pc}
;;;259    
                          ENDP


                          AREA ||i.EMCY_GetEmcyBuffer||, CODE, READONLY, ALIGN=1

                  EMCY_GetEmcyBuffer PROC
;;;267    
;;;268    TEMCYMESSAGE EMCYMEM * EMCY_GetEmcyBuffer(void)
000000  b510              PUSH     {r4,lr}
;;;269    {
;;;270        TEMCYMESSAGE EMCYMEM* pEmcy = GetOutOfEmptyEmcyQueue();
000002  f7fffffe          BL       GetOutOfEmptyEmcyQueue
000006  4604              MOV      r4,r0
;;;271    
;;;272    
;;;273    /*ET9300 Project Handler :(#if SOE_SUPPORTED) lines 288 to 291 deleted*/
;;;274    
;;;275        return pEmcy;
000008  4620              MOV      r0,r4
;;;276    }
00000a  bd10              POP      {r4,pc}
;;;277    
                          ENDP


                          AREA ||i.EMCY_Init||, CODE, READONLY, ALIGN=2

                  EMCY_Init PROC
;;;194    
;;;195    void EMCY_Init(void)
000000  b510              PUSH     {r4,lr}
;;;196    {
;;;197        UINT8 i;
;;;198    
;;;199        /* initialize send queue */
;;;200        sSendEmcyQueue.FirstInQueue                    = 0;
000002  2000              MOVS     r0,#0
000004  4917              LDR      r1,|L3.100|
000006  8008              STRH     r0,[r1,#0]
;;;201        sSendEmcyQueue.LastInQueue                    = 0;
000008  8048              STRH     r0,[r1,#2]
;;;202        sSendEmcyQueue.PutInQueueFailedCounter    = 0;
00000a  8088              STRH     r0,[r1,#4]
;;;203        /* Bug 27.07: MaxQueueSize has to be set to the number of elements */
;;;204        sSendEmcyQueue.MaxQueueSize                    = MAX_EMERGENCIES+1;
00000c  2002              MOVS     r0,#2
00000e  80c8              STRH     r0,[r1,#6]
;;;205        for (i = 0; i < MAX_EMERGENCIES; i++)
000010  2400              MOVS     r4,#0
000012  e006              B        |L3.34|
                  |L3.20|
;;;206        {
;;;207            sSendEmcyQueue.pQueue[i] = 0;
000014  2100              MOVS     r1,#0
000016  4813              LDR      r0,|L3.100|
000018  3008              ADDS     r0,r0,#8
00001a  f8401024          STR      r1,[r0,r4,LSL #2]
00001e  1c60              ADDS     r0,r4,#1              ;205
000020  b2c4              UXTB     r4,r0                 ;205
                  |L3.34|
000022  2c01              CMP      r4,#1                 ;205
000024  dbf6              BLT      |L3.20|
;;;208        }
;;;209    
;;;210        /* initialize empty queue */
;;;211        sEmptyEmcyQueue.FirstInQueue                    = 0;
000026  2000              MOVS     r0,#0
000028  490f              LDR      r1,|L3.104|
00002a  8008              STRH     r0,[r1,#0]
;;;212        sEmptyEmcyQueue.LastInQueue                    = 0;
00002c  8048              STRH     r0,[r1,#2]
;;;213        sEmptyEmcyQueue.PutInQueueFailedCounter    = 0;
00002e  8088              STRH     r0,[r1,#4]
;;;214        /* Bug 27.07: MaxQueueSize has to be set to the number of elements */
;;;215        sEmptyEmcyQueue.MaxQueueSize                    = MAX_EMERGENCIES+1;
000030  2002              MOVS     r0,#2
000032  80c8              STRH     r0,[r1,#6]
;;;216        for (i = 0; i < MAX_EMERGENCIES; i++)
000034  2400              MOVS     r4,#0
000036  e006              B        |L3.70|
                  |L3.56|
;;;217        {
;;;218            sEmptyEmcyQueue.pQueue[i] = 0;
000038  2100              MOVS     r1,#0
00003a  480b              LDR      r0,|L3.104|
00003c  3008              ADDS     r0,r0,#8
00003e  f8401024          STR      r1,[r0,r4,LSL #2]
000042  1c60              ADDS     r0,r4,#1              ;216
000044  b2c4              UXTB     r4,r0                 ;216
                  |L3.70|
000046  2c01              CMP      r4,#1                 ;216
000048  dbf6              BLT      |L3.56|
;;;219        }
;;;220    
;;;221        /* put all buffers in empty queue */
;;;222        for (i = 0; i < MAX_EMERGENCIES; i++)
00004a  2400              MOVS     r4,#0
00004c  e006              B        |L3.92|
                  |L3.78|
;;;223        {
;;;224            PutInEmptyEmcyQueue(&asEmcy[i]);
00004e  4907              LDR      r1,|L3.108|
000050  eb0100c4          ADD      r0,r1,r4,LSL #3
000054  f7fffffe          BL       PutInEmptyEmcyQueue
000058  1c60              ADDS     r0,r4,#1              ;222
00005a  b2c4              UXTB     r4,r0                 ;222
                  |L3.92|
00005c  2c01              CMP      r4,#1                 ;222
00005e  dbf6              BLT      |L3.78|
;;;225        }
;;;226    }
000060  bd10              POP      {r4,pc}
;;;227    
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
                          DCD      sSendEmcyQueue
                  |L3.104|
                          DCD      sEmptyEmcyQueue
                  |L3.108|
                          DCD      asEmcy

                          AREA ||i.EMCY_IsQueueEmpty||, CODE, READONLY, ALIGN=2

                  EMCY_IsQueueEmpty PROC
;;;235    
;;;236    UINT8 EMCY_IsQueueEmpty(void)
000000  4804              LDR      r0,|L4.20|
;;;237    {
;;;238        return (sSendEmcyQueue.FirstInQueue == sSendEmcyQueue.LastInQueue);
000002  8800              LDRH     r0,[r0,#0]  ; sSendEmcyQueue
000004  4903              LDR      r1,|L4.20|
000006  8849              LDRH     r1,[r1,#2]  ; sSendEmcyQueue
000008  4288              CMP      r0,r1
00000a  d101              BNE      |L4.16|
00000c  2001              MOVS     r0,#1
                  |L4.14|
;;;239    }
00000e  4770              BX       lr
                  |L4.16|
000010  2000              MOVS     r0,#0                 ;238
000012  e7fc              B        |L4.14|
;;;240    
                          ENDP

                  |L4.20|
                          DCD      sSendEmcyQueue

                          AREA ||i.EMCY_SendEmergency||, CODE, READONLY, ALIGN=2

                  EMCY_SendEmergency PROC
;;;285    
;;;286    UINT8 EMCY_SendEmergency( TEMCYMESSAGE EMCYMEM *pEmcy )
000000  b510              PUSH     {r4,lr}
;;;287    {
000002  4604              MOV      r4,r0
;;;288    
;;;289        ENTER_MBX_CRITICAL;
;;;290    
;;;291        if ( bSendMbxIsFull || ((nAlStatus & STATE_MASK) == STATE_INIT)
000004  481a              LDR      r0,|L5.112|
000006  7800              LDRB     r0,[r0,#0]  ; bSendMbxIsFull
000008  b928              CBNZ     r0,|L5.22|
00000a  481a              LDR      r0,|L5.116|
00000c  7800              LDRB     r0,[r0,#0]  ; nAlStatus
00000e  f000000f          AND      r0,r0,#0xf
000012  2801              CMP      r0,#1
000014  d10a              BNE      |L5.44|
                  |L5.22|
;;;292    /*ET9300 Project Handler :(#if !MAILBOX_QUEUE) lines 310 to 312 deleted*/
;;;293            )
;;;294        {
;;;295            /* send mailbox is full store the emergency message */
;;;296            PutInSendEmcyQueue( pEmcy );
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       PutInSendEmcyQueue
;;;297    
;;;298            u8MailboxSendReqStored |= EMCY_SERVICE;
00001c  4816              LDR      r0,|L5.120|
00001e  7800              LDRB     r0,[r0,#0]  ; u8MailboxSendReqStored
000020  f0400001          ORR      r0,r0,#1
000024  4914              LDR      r1,|L5.120|
000026  7008              STRB     r0,[r1,#0]
;;;299        
;;;300    
;;;301            LEAVE_MBX_CRITICAL;
;;;302            return 0;
000028  2000              MOVS     r0,#0
                  |L5.42|
;;;303        }
;;;304    
;;;305        /* buffer psWriteMbx is free if bSendMbxIsFull is not set */
;;;306        psWriteMbx = (TMBX MBXMEM *) APPL_AllocMailboxBuffer(MAX_EMCY_SIZE);
;;;307        /* it shall be checked if a valid pointer was returned */
;;;308        if ( psWriteMbx == NULL )
;;;309        {
;;;310    
;;;311            LEAVE_MBX_CRITICAL;
;;;312            return ALSTATUSCODE_NOMEMORY;
;;;313        }
;;;314    
;;;315        OBJTOMBXMEMCPY(psWriteMbx, acEmcyCoeHeader, SIZEOF(acEmcyCoeHeader));
;;;316        MBXMEMCPY(&psWriteMbx->Data[1], pEmcy, SIZEOF(TEMCYMESSAGE));
;;;317    /*ET9300 Project Handler :(#if SOE_SUPPORTED) lines 341 to 354 deleted*/
;;;318    
;;;319        // HBu 02.05.06: emergency buffer has to be put in the empty queue only
;;;320        //               if the sending was successful
;;;321        if (MBX_MailboxSendReq(psWriteMbx, EMCY_SERVICE) == 0)
;;;322        {
;;;323            /* put emergency buffer back in the empty queue */
;;;324            PutInEmptyEmcyQueue( pEmcy );
;;;325        }
;;;326        
;;;327        LEAVE_MBX_CRITICAL;
;;;328    
;;;329        return 0;
;;;330    }
00002a  bd10              POP      {r4,pc}
                  |L5.44|
00002c  2010              MOVS     r0,#0x10              ;306
00002e  f7fffffe          BL       malloc
000032  4912              LDR      r1,|L5.124|
000034  6008              STR      r0,[r1,#0]            ;306  ; psWriteMbx
000036  4608              MOV      r0,r1                 ;308
000038  6800              LDR      r0,[r0,#0]            ;308  ; psWriteMbx
00003a  b908              CBNZ     r0,|L5.64|
00003c  2002              MOVS     r0,#2                 ;312
00003e  e7f4              B        |L5.42|
                  |L5.64|
000040  480e              LDR      r0,|L5.124|
000042  6800              LDR      r0,[r0,#0]            ;315  ; psWriteMbx
000044  490e              LDR      r1,|L5.128|
000046  680a              LDR      r2,[r1,#0]            ;315  ; acEmcyCoeHeader
000048  6002              STR      r2,[r0,#0]            ;315
00004a  6849              LDR      r1,[r1,#4]            ;315  ; acEmcyCoeHeader
00004c  6041              STR      r1,[r0,#4]            ;315
00004e  480b              LDR      r0,|L5.124|
000050  6800              LDR      r0,[r0,#0]            ;316  ; psWriteMbx
000052  6821              LDR      r1,[r4,#0]            ;316
000054  6081              STR      r1,[r0,#8]            ;316
000056  6861              LDR      r1,[r4,#4]            ;316
000058  60c1              STR      r1,[r0,#0xc]          ;316
00005a  2101              MOVS     r1,#1                 ;321
00005c  4807              LDR      r0,|L5.124|
00005e  6800              LDR      r0,[r0,#0]            ;321  ; psWriteMbx
000060  f7fffffe          BL       MBX_MailboxSendReq
000064  b910              CBNZ     r0,|L5.108|
000066  4620              MOV      r0,r4                 ;324
000068  f7fffffe          BL       PutInEmptyEmcyQueue
                  |L5.108|
00006c  2000              MOVS     r0,#0                 ;329
00006e  e7dc              B        |L5.42|
;;;331    
                          ENDP

                  |L5.112|
                          DCD      bSendMbxIsFull
                  |L5.116|
                          DCD      nAlStatus
                  |L5.120|
                          DCD      u8MailboxSendReqStored
                  |L5.124|
                          DCD      psWriteMbx
                  |L5.128|
                          DCD      acEmcyCoeHeader

                          AREA ||i.GetOutOfEmptyEmcyQueue||, CODE, READONLY, ALIGN=2

                  GetOutOfEmptyEmcyQueue PROC
;;;97     
;;;98     TEMCYMESSAGE EMCYMEM * GetOutOfEmptyEmcyQueue(void)
000000  490c              LDR      r1,|L6.52|
;;;99     {
;;;100        TEMCYMESSAGE EMCYMEM * pEmcy;
;;;101    
;;;102    
;;;103            ENTER_EMCY_CRITICAL;
;;;104        if (sEmptyEmcyQueue.FirstInQueue != sEmptyEmcyQueue.LastInQueue)
000002  8809              LDRH     r1,[r1,#0]  ; sEmptyEmcyQueue
000004  4a0b              LDR      r2,|L6.52|
000006  8852              LDRH     r2,[r2,#2]  ; sEmptyEmcyQueue
000008  4291              CMP      r1,r2
00000a  d011              BEQ      |L6.48|
;;;105        {
;;;106            UINT16 firstInQueue = sEmptyEmcyQueue.FirstInQueue;
00000c  4a09              LDR      r2,|L6.52|
00000e  8811              LDRH     r1,[r2,#0]  ; sEmptyEmcyQueue
;;;107    
;;;108            pEmcy = sEmptyEmcyQueue.pQueue[firstInQueue];
000010  3208              ADDS     r2,r2,#8
000012  f8520021          LDR      r0,[r2,r1,LSL #2]
;;;109            firstInQueue++;
000016  1c4a              ADDS     r2,r1,#1
000018  b291              UXTH     r1,r2
;;;110            sEmptyEmcyQueue.FirstInQueue = firstInQueue;
00001a  4a06              LDR      r2,|L6.52|
00001c  8011              STRH     r1,[r2,#0]
;;;111            if (sEmptyEmcyQueue.FirstInQueue == sEmptyEmcyQueue.MaxQueueSize)
00001e  8812              LDRH     r2,[r2,#0]  ; sEmptyEmcyQueue
000020  4b04              LDR      r3,|L6.52|
000022  88db              LDRH     r3,[r3,#6]  ; sEmptyEmcyQueue
000024  429a              CMP      r2,r3
000026  d102              BNE      |L6.46|
;;;112            {
;;;113                sEmptyEmcyQueue.FirstInQueue = 0;
000028  2200              MOVS     r2,#0
00002a  4b02              LDR      r3,|L6.52|
00002c  801a              STRH     r2,[r3,#0]
                  |L6.46|
;;;114            }
;;;115        }
00002e  e000              B        |L6.50|
                  |L6.48|
;;;116        else
;;;117        {
;;;118            pEmcy = 0;
000030  2000              MOVS     r0,#0
                  |L6.50|
;;;119        }
;;;120        LEAVE_EMCY_CRITICAL;
;;;121    
;;;122        return pEmcy;
;;;123    }
000032  4770              BX       lr
;;;124    
                          ENDP

                  |L6.52|
                          DCD      sEmptyEmcyQueue

                          AREA ||i.GetOutOfSendEmcyQueue||, CODE, READONLY, ALIGN=2

                  GetOutOfSendEmcyQueue PROC
;;;160    
;;;161    TEMCYMESSAGE EMCYMEM * GetOutOfSendEmcyQueue(void)
000000  490c              LDR      r1,|L7.52|
;;;162    {
;;;163        TEMCYMESSAGE EMCYMEM * pEmcy;
;;;164    
;;;165        
;;;166        ENTER_EMCY_CRITICAL;
;;;167        if (sSendEmcyQueue.FirstInQueue != sSendEmcyQueue.LastInQueue)
000002  8809              LDRH     r1,[r1,#0]  ; sSendEmcyQueue
000004  4a0b              LDR      r2,|L7.52|
000006  8852              LDRH     r2,[r2,#2]  ; sSendEmcyQueue
000008  4291              CMP      r1,r2
00000a  d011              BEQ      |L7.48|
;;;168        {
;;;169            UINT16 firstInQueue = sSendEmcyQueue.FirstInQueue;
00000c  4a09              LDR      r2,|L7.52|
00000e  8811              LDRH     r1,[r2,#0]  ; sSendEmcyQueue
;;;170    
;;;171            pEmcy = sSendEmcyQueue.pQueue[firstInQueue];
000010  3208              ADDS     r2,r2,#8
000012  f8520021          LDR      r0,[r2,r1,LSL #2]
;;;172            firstInQueue++;
000016  1c4a              ADDS     r2,r1,#1
000018  b291              UXTH     r1,r2
;;;173            sSendEmcyQueue.FirstInQueue = firstInQueue;
00001a  4a06              LDR      r2,|L7.52|
00001c  8011              STRH     r1,[r2,#0]
;;;174            if (sSendEmcyQueue.FirstInQueue == sSendEmcyQueue.MaxQueueSize)
00001e  8812              LDRH     r2,[r2,#0]  ; sSendEmcyQueue
000020  4b04              LDR      r3,|L7.52|
000022  88db              LDRH     r3,[r3,#6]  ; sSendEmcyQueue
000024  429a              CMP      r2,r3
000026  d102              BNE      |L7.46|
;;;175            {
;;;176                sSendEmcyQueue.FirstInQueue = 0;
000028  2200              MOVS     r2,#0
00002a  4b02              LDR      r3,|L7.52|
00002c  801a              STRH     r2,[r3,#0]
                  |L7.46|
;;;177            }
;;;178        }
00002e  e000              B        |L7.50|
                  |L7.48|
;;;179        else
;;;180        {
;;;181            pEmcy = 0;
000030  2000              MOVS     r0,#0
                  |L7.50|
;;;182        }
;;;183        LEAVE_EMCY_CRITICAL;
;;;184    
;;;185        return pEmcy;
;;;186    }
000032  4770              BX       lr
;;;187    
                          ENDP

                  |L7.52|
                          DCD      sSendEmcyQueue

                          AREA ||i.PutInEmptyEmcyQueue||, CODE, READONLY, ALIGN=2

                  PutInEmptyEmcyQueue PROC
;;;75     
;;;76     void PutInEmptyEmcyQueue(TEMCYMESSAGE EMCYMEM * pEmcy)
000000  4601              MOV      r1,r0
;;;77     {
;;;78         UINT16 lastInQueue = sEmptyEmcyQueue.LastInQueue+1;
000002  4a08              LDR      r2,|L8.36|
000004  8852              LDRH     r2,[r2,#2]  ; sEmptyEmcyQueue
000006  1c52              ADDS     r2,r2,#1
000008  b290              UXTH     r0,r2
;;;79     
;;;80         if (lastInQueue == sEmptyEmcyQueue.MaxQueueSize)
00000a  4a06              LDR      r2,|L8.36|
00000c  88d2              LDRH     r2,[r2,#6]  ; sEmptyEmcyQueue
00000e  4282              CMP      r2,r0
000010  d100              BNE      |L8.20|
;;;81         {
;;;82             lastInQueue = 0;
000012  2000              MOVS     r0,#0
                  |L8.20|
;;;83         }
;;;84     
;;;85     
;;;86         sEmptyEmcyQueue.pQueue[sEmptyEmcyQueue.LastInQueue] = pEmcy;
000014  4a03              LDR      r2,|L8.36|
000016  8853              LDRH     r3,[r2,#2]  ; sEmptyEmcyQueue
000018  3208              ADDS     r2,r2,#8
00001a  f8421023          STR      r1,[r2,r3,LSL #2]
;;;87         sEmptyEmcyQueue.LastInQueue = lastInQueue;
00001e  3a08              SUBS     r2,r2,#8
000020  8050              STRH     r0,[r2,#2]
;;;88     }
000022  4770              BX       lr
;;;89     
                          ENDP

                  |L8.36|
                          DCD      sEmptyEmcyQueue

                          AREA ||i.PutInSendEmcyQueue||, CODE, READONLY, ALIGN=2

                  PutInSendEmcyQueue PROC
;;;134    
;;;135    void PutInSendEmcyQueue(TEMCYMESSAGE EMCYMEM * pEmcy)
000000  4601              MOV      r1,r0
;;;136    {
;;;137        UINT16 lastInQueue;
;;;138    
;;;139        
;;;140        ENTER_EMCY_CRITICAL;
;;;141        lastInQueue = sSendEmcyQueue.LastInQueue+1;
000002  4a08              LDR      r2,|L9.36|
000004  8852              LDRH     r2,[r2,#2]  ; sSendEmcyQueue
000006  1c52              ADDS     r2,r2,#1
000008  b290              UXTH     r0,r2
;;;142    
;;;143        if (lastInQueue == sSendEmcyQueue.MaxQueueSize)
00000a  4a06              LDR      r2,|L9.36|
00000c  88d2              LDRH     r2,[r2,#6]  ; sSendEmcyQueue
00000e  4282              CMP      r2,r0
000010  d100              BNE      |L9.20|
;;;144        {
;;;145            lastInQueue = 0;
000012  2000              MOVS     r0,#0
                  |L9.20|
;;;146        }
;;;147    
;;;148        sSendEmcyQueue.pQueue[sSendEmcyQueue.LastInQueue] = pEmcy;
000014  4a03              LDR      r2,|L9.36|
000016  8853              LDRH     r3,[r2,#2]  ; sSendEmcyQueue
000018  3208              ADDS     r2,r2,#8
00001a  f8421023          STR      r1,[r2,r3,LSL #2]
;;;149        sSendEmcyQueue.LastInQueue = lastInQueue;
00001e  3a08              SUBS     r2,r2,#8
000020  8050              STRH     r0,[r2,#2]
;;;150        LEAVE_EMCY_CRITICAL;
;;;151    }
000022  4770              BX       lr
;;;152    
                          ENDP

                  |L9.36|
                          DCD      sSendEmcyQueue

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  sSendEmcyQueue
                          %        16
                  sEmptyEmcyQueue
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  acEmcyCoeHeader
000000  000a0000          DCW      0x000a,0x0000
000004  03001000          DCW      0x0300,0x1000

                          AREA ||.data||, DATA, ALIGN=1

                  asEmcy
                          %        8

;*** Start embedded assembler ***

#line 1 "etherCAT\\emcy.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_emcy_c_e6d9c4e8____REV16|
#line 388 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_emcy_c_e6d9c4e8____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_emcy_c_e6d9c4e8____REVSH|
#line 402
|__asm___6_emcy_c_e6d9c4e8____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_emcy_c_e6d9c4e8____RRX|
#line 587
|__asm___6_emcy_c_e6d9c4e8____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
