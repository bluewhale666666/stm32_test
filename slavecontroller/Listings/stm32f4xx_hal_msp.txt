; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_hal_msp.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_hal_msp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\etherCAT -I.\Power -I.\CRC -IC:\Users\LENOVO\Desktop\slavecontroller\RTE -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx\STCubeGenerated\Inc -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\STM32F4xx_HAL_Driver\Inc -ISTCubeGenerated\Inc -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F407xx --omf_browse=.\objects\stm32f4xx_hal_msp.crf C:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx\STCubeGenerated\Src\stm32f4xx_hal_msp.c]
                          THUMB

                          AREA ||i.HAL_CAN_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_CAN_MspDeInit PROC
;;;126    */
;;;127    void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
000000  b510              PUSH     {r4,lr}
;;;128    {
000002  4604              MOV      r4,r0
;;;129      if(hcan->Instance==CAN1)
000004  4909              LDR      r1,|L1.44|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10d              BNE      |L1.40|
;;;130      {
;;;131      /* USER CODE BEGIN CAN1_MspDeInit 0 */
;;;132    
;;;133      /* USER CODE END CAN1_MspDeInit 0 */
;;;134        /* Peripheral clock disable */
;;;135        __HAL_RCC_CAN1_CLK_DISABLE();
00000c  4808              LDR      r0,|L1.48|
00000e  6800              LDR      r0,[r0,#0]
000010  f0207000          BIC      r0,r0,#0x2000000
000014  4906              LDR      r1,|L1.48|
000016  6008              STR      r0,[r1,#0]
;;;136    
;;;137        /**CAN1 GPIO Configuration
;;;138        PA11     ------> CAN1_RX
;;;139        PA12     ------> CAN1_TX
;;;140        */
;;;141        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
000018  f44f51c0          MOV      r1,#0x1800
00001c  4805              LDR      r0,|L1.52|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;142    
;;;143        /* CAN1 interrupt DeInit */
;;;144        HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
000022  2014              MOVS     r0,#0x14
000024  f7fffffe          BL       HAL_NVIC_DisableIRQ
                  |L1.40|
;;;145      /* USER CODE BEGIN CAN1_MspDeInit 1 */
;;;146    
;;;147      /* USER CODE END CAN1_MspDeInit 1 */
;;;148      }
;;;149    
;;;150    }
000028  bd10              POP      {r4,pc}
;;;151    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40006400
                  |L1.48|
                          DCD      0x40023840
                  |L1.52|
                          DCD      0x40020000

                          AREA ||i.HAL_CAN_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_CAN_MspInit PROC
;;;87     */
;;;88     void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
000000  b510              PUSH     {r4,lr}
;;;89     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;90       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;91       if(hcan->Instance==CAN1)
00000e  491f              LDR      r1,|L2.140|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d138              BNE      |L2.136|
;;;92       {
;;;93       /* USER CODE BEGIN CAN1_MspInit 0 */
;;;94     
;;;95       /* USER CODE END CAN1_MspInit 0 */
;;;96         /* Peripheral clock enable */
;;;97         __HAL_RCC_CAN1_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  481c              LDR      r0,|L2.144|
00001e  6800              LDR      r0,[r0,#0]
000020  f0407000          ORR      r0,r0,#0x2000000
000024  491a              LDR      r1,|L2.144|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0007000          AND      r0,r0,#0x2000000
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;98     
;;;99         __HAL_RCC_GPIOA_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4814              LDR      r0,|L2.144|
00003e  3810              SUBS     r0,r0,#0x10
000040  6800              LDR      r0,[r0,#0]
000042  f0400001          ORR      r0,r0,#1
000046  4912              LDR      r1,|L2.144|
000048  3910              SUBS     r1,r1,#0x10
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000001          AND      r0,r0,#1
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;100        /**CAN1 GPIO Configuration
;;;101        PA11     ------> CAN1_RX
;;;102        PA12     ------> CAN1_TX
;;;103        */
;;;104        GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
00005a  f44f50c0          MOV      r0,#0x1800
00005e  9001              STR      r0,[sp,#4]
;;;105        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;106        GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;107        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000068  2003              MOVS     r0,#3
00006a  9004              STR      r0,[sp,#0x10]
;;;108        GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
00006c  2009              MOVS     r0,#9
00006e  9005              STR      r0,[sp,#0x14]
;;;109        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4808              LDR      r0,|L2.148|
000074  f7fffffe          BL       HAL_GPIO_Init
;;;110    
;;;111        /* CAN1 interrupt Init */
;;;112        HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 4, 0);
000078  2200              MOVS     r2,#0
00007a  2104              MOVS     r1,#4
00007c  2014              MOVS     r0,#0x14
00007e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;113        HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
000082  2014              MOVS     r0,#0x14
000084  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L2.136|
;;;114      /* USER CODE BEGIN CAN1_MspInit 1 */
;;;115    
;;;116      /* USER CODE END CAN1_MspInit 1 */
;;;117      }
;;;118    
;;;119    }
000088  b006              ADD      sp,sp,#0x18
00008a  bd10              POP      {r4,pc}
;;;120    
                          ENDP

                  |L2.140|
                          DCD      0x40006400
                  |L2.144|
                          DCD      0x40023840
                  |L2.148|
                          DCD      0x40020000

                          AREA ||i.HAL_I2C_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspDeInit PROC
;;;249    */
;;;250    void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
000000  b510              PUSH     {r4,lr}
;;;251    {
000002  4604              MOV      r4,r0
;;;252      if(hi2c->Instance==I2C1)
000004  491d              LDR      r1,|L3.124|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10e              BNE      |L3.42|
;;;253      {
;;;254      /* USER CODE BEGIN I2C1_MspDeInit 0 */
;;;255    
;;;256      /* USER CODE END I2C1_MspDeInit 0 */
;;;257        /* Peripheral clock disable */
;;;258        __HAL_RCC_I2C1_CLK_DISABLE();
00000c  481c              LDR      r0,|L3.128|
00000e  6800              LDR      r0,[r0,#0]
000010  f4201000          BIC      r0,r0,#0x200000
000014  491a              LDR      r1,|L3.128|
000016  6008              STR      r0,[r1,#0]
;;;259    
;;;260        /**I2C1 GPIO Configuration
;;;261        PB6     ------> I2C1_SCL
;;;262        PB7     ------> I2C1_SDA
;;;263        */
;;;264        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
000018  2140              MOVS     r1,#0x40
00001a  481a              LDR      r0,|L3.132|
00001c  f7fffffe          BL       HAL_GPIO_DeInit
;;;265    
;;;266        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7);
000020  2180              MOVS     r1,#0x80
000022  4818              LDR      r0,|L3.132|
000024  f7fffffe          BL       HAL_GPIO_DeInit
000028  e026              B        |L3.120|
                  |L3.42|
;;;267    
;;;268      /* USER CODE BEGIN I2C1_MspDeInit 1 */
;;;269    
;;;270      /* USER CODE END I2C1_MspDeInit 1 */
;;;271      }
;;;272      else if(hi2c->Instance==I2C2)
00002a  4917              LDR      r1,|L3.136|
00002c  6820              LDR      r0,[r4,#0]
00002e  4288              CMP      r0,r1
000030  d10f              BNE      |L3.82|
;;;273      {
;;;274      /* USER CODE BEGIN I2C2_MspDeInit 0 */
;;;275    
;;;276      /* USER CODE END I2C2_MspDeInit 0 */
;;;277        /* Peripheral clock disable */
;;;278        __HAL_RCC_I2C2_CLK_DISABLE();
000032  4813              LDR      r0,|L3.128|
000034  6800              LDR      r0,[r0,#0]
000036  f4200080          BIC      r0,r0,#0x400000
00003a  4911              LDR      r1,|L3.128|
00003c  6008              STR      r0,[r1,#0]
;;;279    
;;;280        /**I2C2 GPIO Configuration
;;;281        PB10     ------> I2C2_SCL
;;;282        PB11     ------> I2C2_SDA
;;;283        */
;;;284        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10);
00003e  1509              ASRS     r1,r1,#20
000040  4810              LDR      r0,|L3.132|
000042  f7fffffe          BL       HAL_GPIO_DeInit
;;;285    
;;;286        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_11);
000046  f44f6100          MOV      r1,#0x800
00004a  480e              LDR      r0,|L3.132|
00004c  f7fffffe          BL       HAL_GPIO_DeInit
000050  e012              B        |L3.120|
                  |L3.82|
;;;287    
;;;288      /* USER CODE BEGIN I2C2_MspDeInit 1 */
;;;289    
;;;290      /* USER CODE END I2C2_MspDeInit 1 */
;;;291      }
;;;292      else if(hi2c->Instance==I2C3)
000052  490e              LDR      r1,|L3.140|
000054  6820              LDR      r0,[r4,#0]
000056  4288              CMP      r0,r1
000058  d10e              BNE      |L3.120|
;;;293      {
;;;294      /* USER CODE BEGIN I2C3_MspDeInit 0 */
;;;295    
;;;296      /* USER CODE END I2C3_MspDeInit 0 */
;;;297        /* Peripheral clock disable */
;;;298        __HAL_RCC_I2C3_CLK_DISABLE();
00005a  4809              LDR      r0,|L3.128|
00005c  6800              LDR      r0,[r0,#0]
00005e  f4200000          BIC      r0,r0,#0x800000
000062  4907              LDR      r1,|L3.128|
000064  6008              STR      r0,[r1,#0]
;;;299    
;;;300        /**I2C3 GPIO Configuration
;;;301        PC9     ------> I2C3_SDA
;;;302        PA8     ------> I2C3_SCL
;;;303        */
;;;304        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_9);
000066  1549              ASRS     r1,r1,#21
000068  4809              LDR      r0,|L3.144|
00006a  f7fffffe          BL       HAL_GPIO_DeInit
;;;305    
;;;306        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_8);
00006e  f44f7180          MOV      r1,#0x100
000072  4808              LDR      r0,|L3.148|
000074  f7fffffe          BL       HAL_GPIO_DeInit
                  |L3.120|
;;;307    
;;;308      /* USER CODE BEGIN I2C3_MspDeInit 1 */
;;;309    
;;;310      /* USER CODE END I2C3_MspDeInit 1 */
;;;311      }
;;;312    
;;;313    }
000078  bd10              POP      {r4,pc}
;;;314    
                          ENDP

00007a  0000              DCW      0x0000
                  |L3.124|
                          DCD      0x40005400
                  |L3.128|
                          DCD      0x40023840
                  |L3.132|
                          DCD      0x40020400
                  |L3.136|
                          DCD      0x40005800
                  |L3.140|
                          DCD      0x40005c00
                  |L3.144|
                          DCD      0x40020800
                  |L3.148|
                          DCD      0x40020000

                          AREA ||i.HAL_I2C_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspInit PROC
;;;157    */
;;;158    void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
000000  b510              PUSH     {r4,lr}
;;;159    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;160      GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;161      if(hi2c->Instance==I2C1)
00000e  495e              LDR      r1,|L4.392|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d12f              BNE      |L4.118|
;;;162      {
;;;163      /* USER CODE BEGIN I2C1_MspInit 0 */
;;;164    
;;;165      /* USER CODE END I2C1_MspInit 0 */
;;;166    
;;;167        __HAL_RCC_GPIOB_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  485b              LDR      r0,|L4.396|
00001e  6800              LDR      r0,[r0,#0]
000020  f0400002          ORR      r0,r0,#2
000024  4959              LDR      r1,|L4.396|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0000002          AND      r0,r0,#2
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;168        /**I2C1 GPIO Configuration
;;;169        PB6     ------> I2C1_SCL
;;;170        PB7     ------> I2C1_SDA
;;;171        */
;;;172        GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
000036  20c0              MOVS     r0,#0xc0
000038  9001              STR      r0,[sp,#4]
;;;173        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
00003a  2012              MOVS     r0,#0x12
00003c  9002              STR      r0,[sp,#8]
;;;174        GPIO_InitStruct.Pull = GPIO_NOPULL;
00003e  2000              MOVS     r0,#0
000040  9003              STR      r0,[sp,#0xc]
;;;175        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000042  2003              MOVS     r0,#3
000044  9004              STR      r0,[sp,#0x10]
;;;176        GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
000046  2004              MOVS     r0,#4
000048  9005              STR      r0,[sp,#0x14]
;;;177        HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
00004a  a901              ADD      r1,sp,#4
00004c  4850              LDR      r0,|L4.400|
00004e  f7fffffe          BL       HAL_GPIO_Init
;;;178    
;;;179        /* Peripheral clock enable */
;;;180        __HAL_RCC_I2C1_CLK_ENABLE();
000052  bf00              NOP      
000054  2000              MOVS     r0,#0
000056  9000              STR      r0,[sp,#0]
000058  484c              LDR      r0,|L4.396|
00005a  3010              ADDS     r0,r0,#0x10
00005c  6800              LDR      r0,[r0,#0]
00005e  f4401000          ORR      r0,r0,#0x200000
000062  494a              LDR      r1,|L4.396|
000064  3110              ADDS     r1,r1,#0x10
000066  6008              STR      r0,[r1,#0]
000068  4608              MOV      r0,r1
00006a  6800              LDR      r0,[r0,#0]
00006c  f4001000          AND      r0,r0,#0x200000
000070  9000              STR      r0,[sp,#0]
000072  bf00              NOP      
000074  e086              B        |L4.388|
                  |L4.118|
;;;181      /* USER CODE BEGIN I2C1_MspInit 1 */
;;;182    
;;;183      /* USER CODE END I2C1_MspInit 1 */
;;;184      }
;;;185      else if(hi2c->Instance==I2C2)
000076  4947              LDR      r1,|L4.404|
000078  6820              LDR      r0,[r4,#0]
00007a  4288              CMP      r0,r1
00007c  d130              BNE      |L4.224|
;;;186      {
;;;187      /* USER CODE BEGIN I2C2_MspInit 0 */
;;;188    
;;;189      /* USER CODE END I2C2_MspInit 0 */
;;;190    
;;;191        __HAL_RCC_GPIOB_CLK_ENABLE();
00007e  bf00              NOP      
000080  2000              MOVS     r0,#0
000082  9000              STR      r0,[sp,#0]
000084  4841              LDR      r0,|L4.396|
000086  6800              LDR      r0,[r0,#0]
000088  f0400002          ORR      r0,r0,#2
00008c  493f              LDR      r1,|L4.396|
00008e  6008              STR      r0,[r1,#0]
000090  4608              MOV      r0,r1
000092  6800              LDR      r0,[r0,#0]
000094  f0000002          AND      r0,r0,#2
000098  9000              STR      r0,[sp,#0]
00009a  bf00              NOP      
00009c  bf00              NOP      
;;;192        /**I2C2 GPIO Configuration
;;;193        PB10     ------> I2C2_SCL
;;;194        PB11     ------> I2C2_SDA
;;;195        */
;;;196        GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
00009e  f44f6040          MOV      r0,#0xc00
0000a2  9001              STR      r0,[sp,#4]
;;;197        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
0000a4  2012              MOVS     r0,#0x12
0000a6  9002              STR      r0,[sp,#8]
;;;198        GPIO_InitStruct.Pull = GPIO_NOPULL;
0000a8  2000              MOVS     r0,#0
0000aa  9003              STR      r0,[sp,#0xc]
;;;199        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
0000ac  2003              MOVS     r0,#3
0000ae  9004              STR      r0,[sp,#0x10]
;;;200        GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
0000b0  2004              MOVS     r0,#4
0000b2  9005              STR      r0,[sp,#0x14]
;;;201        HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
0000b4  a901              ADD      r1,sp,#4
0000b6  4836              LDR      r0,|L4.400|
0000b8  f7fffffe          BL       HAL_GPIO_Init
;;;202    
;;;203        /* Peripheral clock enable */
;;;204        __HAL_RCC_I2C2_CLK_ENABLE();
0000bc  bf00              NOP      
0000be  2000              MOVS     r0,#0
0000c0  9000              STR      r0,[sp,#0]
0000c2  4832              LDR      r0,|L4.396|
0000c4  3010              ADDS     r0,r0,#0x10
0000c6  6800              LDR      r0,[r0,#0]
0000c8  f4400080          ORR      r0,r0,#0x400000
0000cc  492f              LDR      r1,|L4.396|
0000ce  3110              ADDS     r1,r1,#0x10
0000d0  6008              STR      r0,[r1,#0]
0000d2  4608              MOV      r0,r1
0000d4  6800              LDR      r0,[r0,#0]
0000d6  f4000080          AND      r0,r0,#0x400000
0000da  9000              STR      r0,[sp,#0]
0000dc  bf00              NOP      
0000de  e051              B        |L4.388|
                  |L4.224|
;;;205      /* USER CODE BEGIN I2C2_MspInit 1 */
;;;206    
;;;207      /* USER CODE END I2C2_MspInit 1 */
;;;208      }
;;;209      else if(hi2c->Instance==I2C3)
0000e0  492d              LDR      r1,|L4.408|
0000e2  6820              LDR      r0,[r4,#0]
0000e4  4288              CMP      r0,r1
0000e6  d14d              BNE      |L4.388|
;;;210      {
;;;211      /* USER CODE BEGIN I2C3_MspInit 0 */
;;;212    
;;;213      /* USER CODE END I2C3_MspInit 0 */
;;;214    
;;;215        __HAL_RCC_GPIOC_CLK_ENABLE();
0000e8  bf00              NOP      
0000ea  2000              MOVS     r0,#0
0000ec  9000              STR      r0,[sp,#0]
0000ee  4827              LDR      r0,|L4.396|
0000f0  6800              LDR      r0,[r0,#0]
0000f2  f0400004          ORR      r0,r0,#4
0000f6  4925              LDR      r1,|L4.396|
0000f8  6008              STR      r0,[r1,#0]
0000fa  4608              MOV      r0,r1
0000fc  6800              LDR      r0,[r0,#0]
0000fe  f0000004          AND      r0,r0,#4
000102  9000              STR      r0,[sp,#0]
000104  bf00              NOP      
000106  bf00              NOP      
;;;216        __HAL_RCC_GPIOA_CLK_ENABLE();
000108  bf00              NOP      
00010a  2000              MOVS     r0,#0
00010c  9000              STR      r0,[sp,#0]
00010e  4608              MOV      r0,r1
000110  6800              LDR      r0,[r0,#0]
000112  f0400001          ORR      r0,r0,#1
000116  6008              STR      r0,[r1,#0]
000118  4608              MOV      r0,r1
00011a  6800              LDR      r0,[r0,#0]
00011c  f0000001          AND      r0,r0,#1
000120  9000              STR      r0,[sp,#0]
000122  bf00              NOP      
000124  bf00              NOP      
;;;217        /**I2C3 GPIO Configuration
;;;218        PC9     ------> I2C3_SDA
;;;219        PA8     ------> I2C3_SCL
;;;220        */
;;;221        GPIO_InitStruct.Pin = GPIO_PIN_9;
000126  1548              ASRS     r0,r1,#21
000128  9001              STR      r0,[sp,#4]
;;;222        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
00012a  2012              MOVS     r0,#0x12
00012c  9002              STR      r0,[sp,#8]
;;;223        GPIO_InitStruct.Pull = GPIO_NOPULL;
00012e  2000              MOVS     r0,#0
000130  9003              STR      r0,[sp,#0xc]
;;;224        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000132  2003              MOVS     r0,#3
000134  9004              STR      r0,[sp,#0x10]
;;;225        GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
000136  2004              MOVS     r0,#4
000138  9005              STR      r0,[sp,#0x14]
;;;226        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
00013a  a901              ADD      r1,sp,#4
00013c  4817              LDR      r0,|L4.412|
00013e  f7fffffe          BL       HAL_GPIO_Init
;;;227    
;;;228        GPIO_InitStruct.Pin = GPIO_PIN_8;
000142  f44f7080          MOV      r0,#0x100
000146  9001              STR      r0,[sp,#4]
;;;229        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
000148  2012              MOVS     r0,#0x12
00014a  9002              STR      r0,[sp,#8]
;;;230        GPIO_InitStruct.Pull = GPIO_NOPULL;
00014c  2000              MOVS     r0,#0
00014e  9003              STR      r0,[sp,#0xc]
;;;231        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000150  2003              MOVS     r0,#3
000152  9004              STR      r0,[sp,#0x10]
;;;232        GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
000154  2004              MOVS     r0,#4
000156  9005              STR      r0,[sp,#0x14]
;;;233        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000158  a901              ADD      r1,sp,#4
00015a  4811              LDR      r0,|L4.416|
00015c  f7fffffe          BL       HAL_GPIO_Init
;;;234    
;;;235        /* Peripheral clock enable */
;;;236        __HAL_RCC_I2C3_CLK_ENABLE();
000160  bf00              NOP      
000162  2000              MOVS     r0,#0
000164  9000              STR      r0,[sp,#0]
000166  4809              LDR      r0,|L4.396|
000168  3010              ADDS     r0,r0,#0x10
00016a  6800              LDR      r0,[r0,#0]
00016c  f4400000          ORR      r0,r0,#0x800000
000170  4906              LDR      r1,|L4.396|
000172  3110              ADDS     r1,r1,#0x10
000174  6008              STR      r0,[r1,#0]
000176  4608              MOV      r0,r1
000178  6800              LDR      r0,[r0,#0]
00017a  f4000000          AND      r0,r0,#0x800000
00017e  9000              STR      r0,[sp,#0]
000180  bf00              NOP      
000182  bf00              NOP      
                  |L4.388|
;;;237      /* USER CODE BEGIN I2C3_MspInit 1 */
;;;238    
;;;239      /* USER CODE END I2C3_MspInit 1 */
;;;240      }
;;;241    
;;;242    }
000184  b006              ADD      sp,sp,#0x18
000186  bd10              POP      {r4,pc}
;;;243    
                          ENDP

                  |L4.392|
                          DCD      0x40005400
                  |L4.396|
                          DCD      0x40023830
                  |L4.400|
                          DCD      0x40020400
                  |L4.404|
                          DCD      0x40005800
                  |L4.408|
                          DCD      0x40005c00
                  |L4.412|
                          DCD      0x40020800
                  |L4.416|
                          DCD      0x40020000

                          AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_MspInit PROC
;;;63       */
;;;64     void HAL_MspInit(void)
000000  b508              PUSH     {r3,lr}
;;;65     {
;;;66       /* USER CODE BEGIN MspInit 0 */
;;;67     
;;;68       /* USER CODE END MspInit 0 */
;;;69     
;;;70       __HAL_RCC_SYSCFG_CLK_ENABLE();
000002  bf00              NOP      
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  4810              LDR      r0,|L5.76|
00000a  6800              LDR      r0,[r0,#0]
00000c  f4404080          ORR      r0,r0,#0x4000
000010  490e              LDR      r1,|L5.76|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f4004080          AND      r0,r0,#0x4000
00001c  9000              STR      r0,[sp,#0]
00001e  bf00              NOP      
000020  bf00              NOP      
;;;71       __HAL_RCC_PWR_CLK_ENABLE();
000022  bf00              NOP      
000024  2000              MOVS     r0,#0
000026  9000              STR      r0,[sp,#0]
000028  1f08              SUBS     r0,r1,#4
00002a  6800              LDR      r0,[r0,#0]
00002c  f0405080          ORR      r0,r0,#0x10000000
000030  1f09              SUBS     r1,r1,#4
000032  6008              STR      r0,[r1,#0]
000034  4608              MOV      r0,r1
000036  6800              LDR      r0,[r0,#0]
000038  f0005080          AND      r0,r0,#0x10000000
00003c  9000              STR      r0,[sp,#0]
00003e  bf00              NOP      
000040  bf00              NOP      
;;;72     
;;;73       HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_3);
000042  2004              MOVS     r0,#4
000044  f7fffffe          BL       HAL_NVIC_SetPriorityGrouping
;;;74     
;;;75       /* System interrupt init*/
;;;76     
;;;77       /* USER CODE BEGIN MspInit 1 */
;;;78     
;;;79       /* USER CODE END MspInit 1 */
;;;80     }
000048  bd08              POP      {r3,pc}
;;;81     
                          ENDP

00004a  0000              DCW      0x0000
                  |L5.76|
                          DCD      0x40023844

                          AREA ||i.HAL_SPI_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspDeInit PROC
;;;357    */
;;;358    void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
000000  b510              PUSH     {r4,lr}
;;;359    {
000002  4604              MOV      r4,r0
;;;360      if(hspi->Instance==SPI3)
000004  4907              LDR      r1,|L6.36|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10a              BNE      |L6.34|
;;;361      {
;;;362      /* USER CODE BEGIN SPI3_MspDeInit 0 */
;;;363    
;;;364      /* USER CODE END SPI3_MspDeInit 0 */
;;;365        /* Peripheral clock disable */
;;;366        __HAL_RCC_SPI3_CLK_DISABLE();
00000c  4806              LDR      r0,|L6.40|
00000e  6800              LDR      r0,[r0,#0]
000010  f4204000          BIC      r0,r0,#0x8000
000014  4904              LDR      r1,|L6.40|
000016  6008              STR      r0,[r1,#0]
;;;367    
;;;368        /**SPI3 GPIO Configuration
;;;369        PC10     ------> SPI3_SCK
;;;370        PC11     ------> SPI3_MISO
;;;371        PC12     ------> SPI3_MOSI
;;;372        */
;;;373        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12);
000018  f44f51e0          MOV      r1,#0x1c00
00001c  4803              LDR      r0,|L6.44|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
                  |L6.34|
;;;374    
;;;375      /* USER CODE BEGIN SPI3_MspDeInit 1 */
;;;376    
;;;377      /* USER CODE END SPI3_MspDeInit 1 */
;;;378      }
;;;379    
;;;380    }
000022  bd10              POP      {r4,pc}
;;;381    
                          ENDP

                  |L6.36|
                          DCD      0x40003c00
                  |L6.40|
                          DCD      0x40023840
                  |L6.44|
                          DCD      0x40020800

                          AREA ||i.HAL_SPI_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspInit PROC
;;;320    */
;;;321    void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
000000  b510              PUSH     {r4,lr}
;;;322    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;323      GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;324      if(hspi->Instance==SPI3)
00000e  491b              LDR      r1,|L7.124|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d130              BNE      |L7.120|
;;;325      {
;;;326      /* USER CODE BEGIN SPI3_MspInit 0 */
;;;327    
;;;328      /* USER CODE END SPI3_MspInit 0 */
;;;329        /* Peripheral clock enable */
;;;330        __HAL_RCC_SPI3_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  4818              LDR      r0,|L7.128|
00001e  6800              LDR      r0,[r0,#0]
000020  f4404000          ORR      r0,r0,#0x8000
000024  4916              LDR      r1,|L7.128|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f4004000          AND      r0,r0,#0x8000
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;331    
;;;332        __HAL_RCC_GPIOC_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4810              LDR      r0,|L7.128|
00003e  3810              SUBS     r0,r0,#0x10
000040  6800              LDR      r0,[r0,#0]
000042  f0400004          ORR      r0,r0,#4
000046  490e              LDR      r1,|L7.128|
000048  3910              SUBS     r1,r1,#0x10
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000004          AND      r0,r0,#4
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;333        /**SPI3 GPIO Configuration
;;;334        PC10     ------> SPI3_SCK
;;;335        PC11     ------> SPI3_MISO
;;;336        PC12     ------> SPI3_MOSI
;;;337        */
;;;338        GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
00005a  f44f50e0          MOV      r0,#0x1c00
00005e  9001              STR      r0,[sp,#4]
;;;339        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;340        GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;341        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000068  2003              MOVS     r0,#3
00006a  9004              STR      r0,[sp,#0x10]
;;;342        GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
00006c  2006              MOVS     r0,#6
00006e  9005              STR      r0,[sp,#0x14]
;;;343        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4804              LDR      r0,|L7.132|
000074  f7fffffe          BL       HAL_GPIO_Init
                  |L7.120|
;;;344    
;;;345      /* USER CODE BEGIN SPI3_MspInit 1 */
;;;346    
;;;347      /* USER CODE END SPI3_MspInit 1 */
;;;348      }
;;;349    
;;;350    }
000078  b006              ADD      sp,sp,#0x18
00007a  bd10              POP      {r4,pc}
;;;351    
                          ENDP

                  |L7.124|
                          DCD      0x40003c00
                  |L7.128|
                          DCD      0x40023840
                  |L7.132|
                          DCD      0x40020800

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;472    */
;;;473    void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
000000  b510              PUSH     {r4,lr}
;;;474    {
000002  4604              MOV      r4,r0
;;;475      if(huart->Instance==USART1)
000004  4914              LDR      r1,|L8.88|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d111              BNE      |L8.48|
;;;476      {
;;;477      /* USER CODE BEGIN USART1_MspDeInit 0 */
;;;478    
;;;479      /* USER CODE END USART1_MspDeInit 0 */
;;;480        /* Peripheral clock disable */
;;;481        __HAL_RCC_USART1_CLK_DISABLE();
00000c  4813              LDR      r0,|L8.92|
00000e  6800              LDR      r0,[r0,#0]
000010  f0200010          BIC      r0,r0,#0x10
000014  4911              LDR      r1,|L8.92|
000016  6008              STR      r0,[r1,#0]
;;;482    
;;;483        /**USART1 GPIO Configuration
;;;484        PA9     ------> USART1_TX
;;;485        PA10     ------> USART1_RX
;;;486        */
;;;487        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
000018  f44f61c0          MOV      r1,#0x600
00001c  4810              LDR      r0,|L8.96|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;488    
;;;489        /* USART1 DMA DeInit */
;;;490        HAL_DMA_DeInit(huart->hdmarx);
000022  6ba0              LDR      r0,[r4,#0x38]
000024  f7fffffe          BL       HAL_DMA_DeInit
;;;491    
;;;492        /* USART1 interrupt DeInit */
;;;493        HAL_NVIC_DisableIRQ(USART1_IRQn);
000028  2025              MOVS     r0,#0x25
00002a  f7fffffe          BL       HAL_NVIC_DisableIRQ
00002e  e012              B        |L8.86|
                  |L8.48|
;;;494      /* USER CODE BEGIN USART1_MspDeInit 1 */
;;;495    
;;;496      /* USER CODE END USART1_MspDeInit 1 */
;;;497      }
;;;498      else if(huart->Instance==USART2)
000030  490c              LDR      r1,|L8.100|
000032  6820              LDR      r0,[r4,#0]
000034  4288              CMP      r0,r1
000036  d10e              BNE      |L8.86|
;;;499      {
;;;500      /* USER CODE BEGIN USART2_MspDeInit 0 */
;;;501    
;;;502      /* USER CODE END USART2_MspDeInit 0 */
;;;503        /* Peripheral clock disable */
;;;504        __HAL_RCC_USART2_CLK_DISABLE();
000038  4808              LDR      r0,|L8.92|
00003a  1f00              SUBS     r0,r0,#4
00003c  6800              LDR      r0,[r0,#0]
00003e  f4203000          BIC      r0,r0,#0x20000
000042  4906              LDR      r1,|L8.92|
000044  1f09              SUBS     r1,r1,#4
000046  6008              STR      r0,[r1,#0]
;;;505    
;;;506        /**USART2 GPIO Configuration
;;;507        PA2     ------> USART2_TX
;;;508        PA3     ------> USART2_RX
;;;509        */
;;;510        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
000048  210c              MOVS     r1,#0xc
00004a  4805              LDR      r0,|L8.96|
00004c  f7fffffe          BL       HAL_GPIO_DeInit
;;;511    
;;;512        /* USART2 interrupt DeInit */
;;;513        HAL_NVIC_DisableIRQ(USART2_IRQn);
000050  2026              MOVS     r0,#0x26
000052  f7fffffe          BL       HAL_NVIC_DisableIRQ
                  |L8.86|
;;;514      /* USER CODE BEGIN USART2_MspDeInit 1 */
;;;515    
;;;516      /* USER CODE END USART2_MspDeInit 1 */
;;;517      }
;;;518    
;;;519    }
000056  bd10              POP      {r4,pc}
;;;520    
                          ENDP

                  |L8.88|
                          DCD      0x40011000
                  |L8.92|
                          DCD      0x40023844
                  |L8.96|
                          DCD      0x40020000
                  |L8.100|
                          DCD      0x40004400

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;387    */
;;;388    void HAL_UART_MspInit(UART_HandleTypeDef* huart)
000000  b510              PUSH     {r4,lr}
;;;389    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;390      GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;391      if(huart->Instance==USART1)
00000e  494f              LDR      r1,|L9.332|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d159              BNE      |L9.202|
;;;392      {
;;;393      /* USER CODE BEGIN USART1_MspInit 0 */
;;;394    
;;;395      /* USER CODE END USART1_MspInit 0 */
;;;396        /* Peripheral clock enable */
;;;397        __HAL_RCC_USART1_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  484c              LDR      r0,|L9.336|
00001e  6800              LDR      r0,[r0,#0]
000020  f0400010          ORR      r0,r0,#0x10
000024  494a              LDR      r1,|L9.336|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0000010          AND      r0,r0,#0x10
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;398    
;;;399        __HAL_RCC_GPIOA_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4844              LDR      r0,|L9.336|
00003e  3814              SUBS     r0,r0,#0x14
000040  6800              LDR      r0,[r0,#0]
000042  f0400001          ORR      r0,r0,#1
000046  4942              LDR      r1,|L9.336|
000048  3914              SUBS     r1,r1,#0x14
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000001          AND      r0,r0,#1
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;400        /**USART1 GPIO Configuration
;;;401        PA9     ------> USART1_TX
;;;402        PA10     ------> USART1_RX
;;;403        */
;;;404        GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
00005a  f44f60c0          MOV      r0,#0x600
00005e  9001              STR      r0,[sp,#4]
;;;405        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;406        GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;407        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000068  2003              MOVS     r0,#3
00006a  9004              STR      r0,[sp,#0x10]
;;;408        GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
00006c  2007              MOVS     r0,#7
00006e  9005              STR      r0,[sp,#0x14]
;;;409        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4838              LDR      r0,|L9.340|
000074  f7fffffe          BL       HAL_GPIO_Init
;;;410    
;;;411        /* USART1 DMA Init */
;;;412        /* USART1_RX Init */
;;;413        hdma_usart1_rx.Instance = DMA2_Stream2;
000078  4837              LDR      r0,|L9.344|
00007a  4938              LDR      r1,|L9.348|
00007c  6008              STR      r0,[r1,#0]  ; hdma_usart1_rx
;;;414        hdma_usart1_rx.Init.Channel = DMA_CHANNEL_4;
00007e  f04f6000          MOV      r0,#0x8000000
000082  6048              STR      r0,[r1,#4]  ; hdma_usart1_rx
;;;415        hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
000084  2100              MOVS     r1,#0
000086  4835              LDR      r0,|L9.348|
000088  6081              STR      r1,[r0,#8]
;;;416        hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
00008a  60c1              STR      r1,[r0,#0xc]
;;;417        hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
00008c  f44f6180          MOV      r1,#0x400
000090  6101              STR      r1,[r0,#0x10]
;;;418        hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
000092  2100              MOVS     r1,#0
000094  6141              STR      r1,[r0,#0x14]
;;;419        hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
000096  6181              STR      r1,[r0,#0x18]
;;;420        hdma_usart1_rx.Init.Mode = DMA_NORMAL;
000098  61c1              STR      r1,[r0,#0x1c]
;;;421        hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
00009a  f44f3140          MOV      r1,#0x30000
00009e  6201              STR      r1,[r0,#0x20]
;;;422        hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
0000a0  2100              MOVS     r1,#0
0000a2  6241              STR      r1,[r0,#0x24]
;;;423        if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
0000a4  f7fffffe          BL       HAL_DMA_Init
0000a8  b108              CBZ      r0,|L9.174|
;;;424        {
;;;425          Error_Handler();
0000aa  f7fffffe          BL       Error_Handler
                  |L9.174|
;;;426        }
;;;427    
;;;428        __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
0000ae  bf00              NOP      
0000b0  482a              LDR      r0,|L9.348|
0000b2  63a0              STR      r0,[r4,#0x38]
0000b4  6384              STR      r4,[r0,#0x38]  ; hdma_usart1_rx
0000b6  bf00              NOP      
;;;429    
;;;430        /* USART1 interrupt Init */
;;;431        HAL_NVIC_SetPriority(USART1_IRQn, 3, 1);
0000b8  2201              MOVS     r2,#1
0000ba  2103              MOVS     r1,#3
0000bc  2025              MOVS     r0,#0x25
0000be  f7fffffe          BL       HAL_NVIC_SetPriority
;;;432        HAL_NVIC_EnableIRQ(USART1_IRQn);
0000c2  2025              MOVS     r0,#0x25
0000c4  f7fffffe          BL       HAL_NVIC_EnableIRQ
0000c8  e03d              B        |L9.326|
                  |L9.202|
;;;433      /* USER CODE BEGIN USART1_MspInit 1 */
;;;434    
;;;435      /* USER CODE END USART1_MspInit 1 */
;;;436      }
;;;437      else if(huart->Instance==USART2)
0000ca  4925              LDR      r1,|L9.352|
0000cc  6820              LDR      r0,[r4,#0]
0000ce  4288              CMP      r0,r1
0000d0  d139              BNE      |L9.326|
;;;438      {
;;;439      /* USER CODE BEGIN USART2_MspInit 0 */
;;;440    
;;;441      /* USER CODE END USART2_MspInit 0 */
;;;442        /* Peripheral clock enable */
;;;443        __HAL_RCC_USART2_CLK_ENABLE();
0000d2  bf00              NOP      
0000d4  2000              MOVS     r0,#0
0000d6  9000              STR      r0,[sp,#0]
0000d8  481d              LDR      r0,|L9.336|
0000da  1f00              SUBS     r0,r0,#4
0000dc  6800              LDR      r0,[r0,#0]
0000de  f4403000          ORR      r0,r0,#0x20000
0000e2  491b              LDR      r1,|L9.336|
0000e4  1f09              SUBS     r1,r1,#4
0000e6  6008              STR      r0,[r1,#0]
0000e8  4608              MOV      r0,r1
0000ea  6800              LDR      r0,[r0,#0]
0000ec  f4003000          AND      r0,r0,#0x20000
0000f0  9000              STR      r0,[sp,#0]
0000f2  bf00              NOP      
0000f4  bf00              NOP      
;;;444    
;;;445        __HAL_RCC_GPIOA_CLK_ENABLE();
0000f6  bf00              NOP      
0000f8  2000              MOVS     r0,#0
0000fa  9000              STR      r0,[sp,#0]
0000fc  4814              LDR      r0,|L9.336|
0000fe  3814              SUBS     r0,r0,#0x14
000100  6800              LDR      r0,[r0,#0]
000102  f0400001          ORR      r0,r0,#1
000106  4912              LDR      r1,|L9.336|
000108  3914              SUBS     r1,r1,#0x14
00010a  6008              STR      r0,[r1,#0]
00010c  4608              MOV      r0,r1
00010e  6800              LDR      r0,[r0,#0]
000110  f0000001          AND      r0,r0,#1
000114  9000              STR      r0,[sp,#0]
000116  bf00              NOP      
000118  bf00              NOP      
;;;446        /**USART2 GPIO Configuration
;;;447        PA2     ------> USART2_TX
;;;448        PA3     ------> USART2_RX
;;;449        */
;;;450        GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
00011a  200c              MOVS     r0,#0xc
00011c  9001              STR      r0,[sp,#4]
;;;451        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
00011e  2002              MOVS     r0,#2
000120  9002              STR      r0,[sp,#8]
;;;452        GPIO_InitStruct.Pull = GPIO_NOPULL;
000122  2000              MOVS     r0,#0
000124  9003              STR      r0,[sp,#0xc]
;;;453        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000126  2003              MOVS     r0,#3
000128  9004              STR      r0,[sp,#0x10]
;;;454        GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
00012a  2007              MOVS     r0,#7
00012c  9005              STR      r0,[sp,#0x14]
;;;455        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
00012e  a901              ADD      r1,sp,#4
000130  4808              LDR      r0,|L9.340|
000132  f7fffffe          BL       HAL_GPIO_Init
;;;456    
;;;457        /* USART2 interrupt Init */
;;;458        HAL_NVIC_SetPriority(USART2_IRQn, 3, 0);
000136  2200              MOVS     r2,#0
000138  2103              MOVS     r1,#3
00013a  2026              MOVS     r0,#0x26
00013c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;459        HAL_NVIC_EnableIRQ(USART2_IRQn);
000140  2026              MOVS     r0,#0x26
000142  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L9.326|
;;;460      /* USER CODE BEGIN USART2_MspInit 1 */
;;;461    
;;;462      /* USER CODE END USART2_MspInit 1 */
;;;463      }
;;;464    
;;;465    }
000146  b006              ADD      sp,sp,#0x18
000148  bd10              POP      {r4,pc}
;;;466    
                          ENDP

00014a  0000              DCW      0x0000
                  |L9.332|
                          DCD      0x40011000
                  |L9.336|
                          DCD      0x40023844
                  |L9.340|
                          DCD      0x40020000
                  |L9.344|
                          DCD      0x40026440
                  |L9.348|
                          DCD      hdma_usart1_rx
                  |L9.352|
                          DCD      0x40004400

;*** Start embedded assembler ***

#line 1 "C:\\Users\\LENOVO\\Desktop\\slavecontroller\\RTE\\Device\\STM32F407ZETx\\STCubeGenerated\\Src\\stm32f4xx_hal_msp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REV16|
#line 388 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REVSH|
#line 402
|__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_hal_msp_c_d46e2bee____RRX|
#line 587
|__asm___19_stm32f4xx_hal_msp_c_d46e2bee____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
