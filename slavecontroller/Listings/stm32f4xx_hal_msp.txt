; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_hal_msp.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_hal_msp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\etherCAT -I.\Power -I.\CRC -IC:\Users\LENOVO\Desktop\slavecontroller\RTE -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx\STCubeGenerated\Inc -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\STM32F4xx_HAL_Driver\Inc -ISTCubeGenerated\Inc -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F407xx --omf_browse=.\objects\stm32f4xx_hal_msp.crf C:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx\STCubeGenerated\Src\stm32f4xx_hal_msp.c]
                          THUMB

                          AREA ||i.HAL_CAN_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_CAN_MspDeInit PROC
;;;125    */
;;;126    void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
000000  b510              PUSH     {r4,lr}
;;;127    {
000002  4604              MOV      r4,r0
;;;128      if(hcan->Instance==CAN1)
000004  4909              LDR      r1,|L1.44|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10d              BNE      |L1.40|
;;;129      {
;;;130      /* USER CODE BEGIN CAN1_MspDeInit 0 */
;;;131    
;;;132      /* USER CODE END CAN1_MspDeInit 0 */
;;;133        /* Peripheral clock disable */
;;;134        __HAL_RCC_CAN1_CLK_DISABLE();
00000c  4808              LDR      r0,|L1.48|
00000e  6800              LDR      r0,[r0,#0]
000010  f0207000          BIC      r0,r0,#0x2000000
000014  4906              LDR      r1,|L1.48|
000016  6008              STR      r0,[r1,#0]
;;;135    
;;;136        /**CAN1 GPIO Configuration
;;;137        PA11     ------> CAN1_RX
;;;138        PA12     ------> CAN1_TX
;;;139        */
;;;140        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
000018  f44f51c0          MOV      r1,#0x1800
00001c  4805              LDR      r0,|L1.52|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;141    
;;;142        /* CAN1 interrupt DeInit */
;;;143        HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
000022  2014              MOVS     r0,#0x14
000024  f7fffffe          BL       HAL_NVIC_DisableIRQ
                  |L1.40|
;;;144      /* USER CODE BEGIN CAN1_MspDeInit 1 */
;;;145    
;;;146      /* USER CODE END CAN1_MspDeInit 1 */
;;;147      }
;;;148    
;;;149    }
000028  bd10              POP      {r4,pc}
;;;150    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40006400
                  |L1.48|
                          DCD      0x40023840
                  |L1.52|
                          DCD      0x40020000

                          AREA ||i.HAL_CAN_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_CAN_MspInit PROC
;;;86     */
;;;87     void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
000000  b510              PUSH     {r4,lr}
;;;88     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;89       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;90       if(hcan->Instance==CAN1)
00000e  491f              LDR      r1,|L2.140|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d138              BNE      |L2.136|
;;;91       {
;;;92       /* USER CODE BEGIN CAN1_MspInit 0 */
;;;93     
;;;94       /* USER CODE END CAN1_MspInit 0 */
;;;95         /* Peripheral clock enable */
;;;96         __HAL_RCC_CAN1_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  481c              LDR      r0,|L2.144|
00001e  6800              LDR      r0,[r0,#0]
000020  f0407000          ORR      r0,r0,#0x2000000
000024  491a              LDR      r1,|L2.144|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0007000          AND      r0,r0,#0x2000000
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;97     
;;;98         __HAL_RCC_GPIOA_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4814              LDR      r0,|L2.144|
00003e  3810              SUBS     r0,r0,#0x10
000040  6800              LDR      r0,[r0,#0]
000042  f0400001          ORR      r0,r0,#1
000046  4912              LDR      r1,|L2.144|
000048  3910              SUBS     r1,r1,#0x10
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000001          AND      r0,r0,#1
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;99         /**CAN1 GPIO Configuration
;;;100        PA11     ------> CAN1_RX
;;;101        PA12     ------> CAN1_TX
;;;102        */
;;;103        GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
00005a  f44f50c0          MOV      r0,#0x1800
00005e  9001              STR      r0,[sp,#4]
;;;104        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;105        GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;106        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000068  2003              MOVS     r0,#3
00006a  9004              STR      r0,[sp,#0x10]
;;;107        GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
00006c  2009              MOVS     r0,#9
00006e  9005              STR      r0,[sp,#0x14]
;;;108        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4808              LDR      r0,|L2.148|
000074  f7fffffe          BL       HAL_GPIO_Init
;;;109    
;;;110        /* CAN1 interrupt Init */
;;;111        HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 4, 0);
000078  2200              MOVS     r2,#0
00007a  2104              MOVS     r1,#4
00007c  2014              MOVS     r0,#0x14
00007e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;112        HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
000082  2014              MOVS     r0,#0x14
000084  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L2.136|
;;;113      /* USER CODE BEGIN CAN1_MspInit 1 */
;;;114    
;;;115      /* USER CODE END CAN1_MspInit 1 */
;;;116      }
;;;117    
;;;118    }
000088  b006              ADD      sp,sp,#0x18
00008a  bd10              POP      {r4,pc}
;;;119    
                          ENDP

                  |L2.140|
                          DCD      0x40006400
                  |L2.144|
                          DCD      0x40023840
                  |L2.148|
                          DCD      0x40020000

                          AREA ||i.HAL_I2C_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspDeInit PROC
;;;248    */
;;;249    void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
000000  b510              PUSH     {r4,lr}
;;;250    {
000002  4604              MOV      r4,r0
;;;251      if(hi2c->Instance==I2C1)
000004  491d              LDR      r1,|L3.124|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10e              BNE      |L3.42|
;;;252      {
;;;253      /* USER CODE BEGIN I2C1_MspDeInit 0 */
;;;254    
;;;255      /* USER CODE END I2C1_MspDeInit 0 */
;;;256        /* Peripheral clock disable */
;;;257        __HAL_RCC_I2C1_CLK_DISABLE();
00000c  481c              LDR      r0,|L3.128|
00000e  6800              LDR      r0,[r0,#0]
000010  f4201000          BIC      r0,r0,#0x200000
000014  491a              LDR      r1,|L3.128|
000016  6008              STR      r0,[r1,#0]
;;;258    
;;;259        /**I2C1 GPIO Configuration
;;;260        PB6     ------> I2C1_SCL
;;;261        PB7     ------> I2C1_SDA
;;;262        */
;;;263        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
000018  2140              MOVS     r1,#0x40
00001a  481a              LDR      r0,|L3.132|
00001c  f7fffffe          BL       HAL_GPIO_DeInit
;;;264    
;;;265        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_7);
000020  2180              MOVS     r1,#0x80
000022  4818              LDR      r0,|L3.132|
000024  f7fffffe          BL       HAL_GPIO_DeInit
000028  e026              B        |L3.120|
                  |L3.42|
;;;266    
;;;267      /* USER CODE BEGIN I2C1_MspDeInit 1 */
;;;268    
;;;269      /* USER CODE END I2C1_MspDeInit 1 */
;;;270      }
;;;271      else if(hi2c->Instance==I2C2)
00002a  4917              LDR      r1,|L3.136|
00002c  6820              LDR      r0,[r4,#0]
00002e  4288              CMP      r0,r1
000030  d10f              BNE      |L3.82|
;;;272      {
;;;273      /* USER CODE BEGIN I2C2_MspDeInit 0 */
;;;274    
;;;275      /* USER CODE END I2C2_MspDeInit 0 */
;;;276        /* Peripheral clock disable */
;;;277        __HAL_RCC_I2C2_CLK_DISABLE();
000032  4813              LDR      r0,|L3.128|
000034  6800              LDR      r0,[r0,#0]
000036  f4200080          BIC      r0,r0,#0x400000
00003a  4911              LDR      r1,|L3.128|
00003c  6008              STR      r0,[r1,#0]
;;;278    
;;;279        /**I2C2 GPIO Configuration
;;;280        PB10     ------> I2C2_SCL
;;;281        PB11     ------> I2C2_SDA
;;;282        */
;;;283        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10);
00003e  1509              ASRS     r1,r1,#20
000040  4810              LDR      r0,|L3.132|
000042  f7fffffe          BL       HAL_GPIO_DeInit
;;;284    
;;;285        HAL_GPIO_DeInit(GPIOB, GPIO_PIN_11);
000046  f44f6100          MOV      r1,#0x800
00004a  480e              LDR      r0,|L3.132|
00004c  f7fffffe          BL       HAL_GPIO_DeInit
000050  e012              B        |L3.120|
                  |L3.82|
;;;286    
;;;287      /* USER CODE BEGIN I2C2_MspDeInit 1 */
;;;288    
;;;289      /* USER CODE END I2C2_MspDeInit 1 */
;;;290      }
;;;291      else if(hi2c->Instance==I2C3)
000052  490e              LDR      r1,|L3.140|
000054  6820              LDR      r0,[r4,#0]
000056  4288              CMP      r0,r1
000058  d10e              BNE      |L3.120|
;;;292      {
;;;293      /* USER CODE BEGIN I2C3_MspDeInit 0 */
;;;294    
;;;295      /* USER CODE END I2C3_MspDeInit 0 */
;;;296        /* Peripheral clock disable */
;;;297        __HAL_RCC_I2C3_CLK_DISABLE();
00005a  4809              LDR      r0,|L3.128|
00005c  6800              LDR      r0,[r0,#0]
00005e  f4200000          BIC      r0,r0,#0x800000
000062  4907              LDR      r1,|L3.128|
000064  6008              STR      r0,[r1,#0]
;;;298    
;;;299        /**I2C3 GPIO Configuration
;;;300        PC9     ------> I2C3_SDA
;;;301        PA8     ------> I2C3_SCL
;;;302        */
;;;303        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_9);
000066  1549              ASRS     r1,r1,#21
000068  4809              LDR      r0,|L3.144|
00006a  f7fffffe          BL       HAL_GPIO_DeInit
;;;304    
;;;305        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_8);
00006e  f44f7180          MOV      r1,#0x100
000072  4808              LDR      r0,|L3.148|
000074  f7fffffe          BL       HAL_GPIO_DeInit
                  |L3.120|
;;;306    
;;;307      /* USER CODE BEGIN I2C3_MspDeInit 1 */
;;;308    
;;;309      /* USER CODE END I2C3_MspDeInit 1 */
;;;310      }
;;;311    
;;;312    }
000078  bd10              POP      {r4,pc}
;;;313    
                          ENDP

00007a  0000              DCW      0x0000
                  |L3.124|
                          DCD      0x40005400
                  |L3.128|
                          DCD      0x40023840
                  |L3.132|
                          DCD      0x40020400
                  |L3.136|
                          DCD      0x40005800
                  |L3.140|
                          DCD      0x40005c00
                  |L3.144|
                          DCD      0x40020800
                  |L3.148|
                          DCD      0x40020000

                          AREA ||i.HAL_I2C_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_I2C_MspInit PROC
;;;156    */
;;;157    void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
000000  b510              PUSH     {r4,lr}
;;;158    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;159      GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;160      if(hi2c->Instance==I2C1)
00000e  495e              LDR      r1,|L4.392|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d12f              BNE      |L4.118|
;;;161      {
;;;162      /* USER CODE BEGIN I2C1_MspInit 0 */
;;;163    
;;;164      /* USER CODE END I2C1_MspInit 0 */
;;;165    
;;;166        __HAL_RCC_GPIOB_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  485b              LDR      r0,|L4.396|
00001e  6800              LDR      r0,[r0,#0]
000020  f0400002          ORR      r0,r0,#2
000024  4959              LDR      r1,|L4.396|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0000002          AND      r0,r0,#2
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;167        /**I2C1 GPIO Configuration
;;;168        PB6     ------> I2C1_SCL
;;;169        PB7     ------> I2C1_SDA
;;;170        */
;;;171        GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
000036  20c0              MOVS     r0,#0xc0
000038  9001              STR      r0,[sp,#4]
;;;172        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
00003a  2012              MOVS     r0,#0x12
00003c  9002              STR      r0,[sp,#8]
;;;173        GPIO_InitStruct.Pull = GPIO_NOPULL;
00003e  2000              MOVS     r0,#0
000040  9003              STR      r0,[sp,#0xc]
;;;174        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000042  2003              MOVS     r0,#3
000044  9004              STR      r0,[sp,#0x10]
;;;175        GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
000046  2004              MOVS     r0,#4
000048  9005              STR      r0,[sp,#0x14]
;;;176        HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
00004a  a901              ADD      r1,sp,#4
00004c  4850              LDR      r0,|L4.400|
00004e  f7fffffe          BL       HAL_GPIO_Init
;;;177    
;;;178        /* Peripheral clock enable */
;;;179        __HAL_RCC_I2C1_CLK_ENABLE();
000052  bf00              NOP      
000054  2000              MOVS     r0,#0
000056  9000              STR      r0,[sp,#0]
000058  484c              LDR      r0,|L4.396|
00005a  3010              ADDS     r0,r0,#0x10
00005c  6800              LDR      r0,[r0,#0]
00005e  f4401000          ORR      r0,r0,#0x200000
000062  494a              LDR      r1,|L4.396|
000064  3110              ADDS     r1,r1,#0x10
000066  6008              STR      r0,[r1,#0]
000068  4608              MOV      r0,r1
00006a  6800              LDR      r0,[r0,#0]
00006c  f4001000          AND      r0,r0,#0x200000
000070  9000              STR      r0,[sp,#0]
000072  bf00              NOP      
000074  e086              B        |L4.388|
                  |L4.118|
;;;180      /* USER CODE BEGIN I2C1_MspInit 1 */
;;;181    
;;;182      /* USER CODE END I2C1_MspInit 1 */
;;;183      }
;;;184      else if(hi2c->Instance==I2C2)
000076  4947              LDR      r1,|L4.404|
000078  6820              LDR      r0,[r4,#0]
00007a  4288              CMP      r0,r1
00007c  d130              BNE      |L4.224|
;;;185      {
;;;186      /* USER CODE BEGIN I2C2_MspInit 0 */
;;;187    
;;;188      /* USER CODE END I2C2_MspInit 0 */
;;;189    
;;;190        __HAL_RCC_GPIOB_CLK_ENABLE();
00007e  bf00              NOP      
000080  2000              MOVS     r0,#0
000082  9000              STR      r0,[sp,#0]
000084  4841              LDR      r0,|L4.396|
000086  6800              LDR      r0,[r0,#0]
000088  f0400002          ORR      r0,r0,#2
00008c  493f              LDR      r1,|L4.396|
00008e  6008              STR      r0,[r1,#0]
000090  4608              MOV      r0,r1
000092  6800              LDR      r0,[r0,#0]
000094  f0000002          AND      r0,r0,#2
000098  9000              STR      r0,[sp,#0]
00009a  bf00              NOP      
00009c  bf00              NOP      
;;;191        /**I2C2 GPIO Configuration
;;;192        PB10     ------> I2C2_SCL
;;;193        PB11     ------> I2C2_SDA
;;;194        */
;;;195        GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
00009e  f44f6040          MOV      r0,#0xc00
0000a2  9001              STR      r0,[sp,#4]
;;;196        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
0000a4  2012              MOVS     r0,#0x12
0000a6  9002              STR      r0,[sp,#8]
;;;197        GPIO_InitStruct.Pull = GPIO_NOPULL;
0000a8  2000              MOVS     r0,#0
0000aa  9003              STR      r0,[sp,#0xc]
;;;198        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
0000ac  2003              MOVS     r0,#3
0000ae  9004              STR      r0,[sp,#0x10]
;;;199        GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
0000b0  2004              MOVS     r0,#4
0000b2  9005              STR      r0,[sp,#0x14]
;;;200        HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
0000b4  a901              ADD      r1,sp,#4
0000b6  4836              LDR      r0,|L4.400|
0000b8  f7fffffe          BL       HAL_GPIO_Init
;;;201    
;;;202        /* Peripheral clock enable */
;;;203        __HAL_RCC_I2C2_CLK_ENABLE();
0000bc  bf00              NOP      
0000be  2000              MOVS     r0,#0
0000c0  9000              STR      r0,[sp,#0]
0000c2  4832              LDR      r0,|L4.396|
0000c4  3010              ADDS     r0,r0,#0x10
0000c6  6800              LDR      r0,[r0,#0]
0000c8  f4400080          ORR      r0,r0,#0x400000
0000cc  492f              LDR      r1,|L4.396|
0000ce  3110              ADDS     r1,r1,#0x10
0000d0  6008              STR      r0,[r1,#0]
0000d2  4608              MOV      r0,r1
0000d4  6800              LDR      r0,[r0,#0]
0000d6  f4000080          AND      r0,r0,#0x400000
0000da  9000              STR      r0,[sp,#0]
0000dc  bf00              NOP      
0000de  e051              B        |L4.388|
                  |L4.224|
;;;204      /* USER CODE BEGIN I2C2_MspInit 1 */
;;;205    
;;;206      /* USER CODE END I2C2_MspInit 1 */
;;;207      }
;;;208      else if(hi2c->Instance==I2C3)
0000e0  492d              LDR      r1,|L4.408|
0000e2  6820              LDR      r0,[r4,#0]
0000e4  4288              CMP      r0,r1
0000e6  d14d              BNE      |L4.388|
;;;209      {
;;;210      /* USER CODE BEGIN I2C3_MspInit 0 */
;;;211    
;;;212      /* USER CODE END I2C3_MspInit 0 */
;;;213    
;;;214        __HAL_RCC_GPIOC_CLK_ENABLE();
0000e8  bf00              NOP      
0000ea  2000              MOVS     r0,#0
0000ec  9000              STR      r0,[sp,#0]
0000ee  4827              LDR      r0,|L4.396|
0000f0  6800              LDR      r0,[r0,#0]
0000f2  f0400004          ORR      r0,r0,#4
0000f6  4925              LDR      r1,|L4.396|
0000f8  6008              STR      r0,[r1,#0]
0000fa  4608              MOV      r0,r1
0000fc  6800              LDR      r0,[r0,#0]
0000fe  f0000004          AND      r0,r0,#4
000102  9000              STR      r0,[sp,#0]
000104  bf00              NOP      
000106  bf00              NOP      
;;;215        __HAL_RCC_GPIOA_CLK_ENABLE();
000108  bf00              NOP      
00010a  2000              MOVS     r0,#0
00010c  9000              STR      r0,[sp,#0]
00010e  4608              MOV      r0,r1
000110  6800              LDR      r0,[r0,#0]
000112  f0400001          ORR      r0,r0,#1
000116  6008              STR      r0,[r1,#0]
000118  4608              MOV      r0,r1
00011a  6800              LDR      r0,[r0,#0]
00011c  f0000001          AND      r0,r0,#1
000120  9000              STR      r0,[sp,#0]
000122  bf00              NOP      
000124  bf00              NOP      
;;;216        /**I2C3 GPIO Configuration
;;;217        PC9     ------> I2C3_SDA
;;;218        PA8     ------> I2C3_SCL
;;;219        */
;;;220        GPIO_InitStruct.Pin = GPIO_PIN_9;
000126  1548              ASRS     r0,r1,#21
000128  9001              STR      r0,[sp,#4]
;;;221        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
00012a  2012              MOVS     r0,#0x12
00012c  9002              STR      r0,[sp,#8]
;;;222        GPIO_InitStruct.Pull = GPIO_NOPULL;
00012e  2000              MOVS     r0,#0
000130  9003              STR      r0,[sp,#0xc]
;;;223        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000132  2003              MOVS     r0,#3
000134  9004              STR      r0,[sp,#0x10]
;;;224        GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
000136  2004              MOVS     r0,#4
000138  9005              STR      r0,[sp,#0x14]
;;;225        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
00013a  a901              ADD      r1,sp,#4
00013c  4817              LDR      r0,|L4.412|
00013e  f7fffffe          BL       HAL_GPIO_Init
;;;226    
;;;227        GPIO_InitStruct.Pin = GPIO_PIN_8;
000142  f44f7080          MOV      r0,#0x100
000146  9001              STR      r0,[sp,#4]
;;;228        GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
000148  2012              MOVS     r0,#0x12
00014a  9002              STR      r0,[sp,#8]
;;;229        GPIO_InitStruct.Pull = GPIO_NOPULL;
00014c  2000              MOVS     r0,#0
00014e  9003              STR      r0,[sp,#0xc]
;;;230        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000150  2003              MOVS     r0,#3
000152  9004              STR      r0,[sp,#0x10]
;;;231        GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
000154  2004              MOVS     r0,#4
000156  9005              STR      r0,[sp,#0x14]
;;;232        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000158  a901              ADD      r1,sp,#4
00015a  4811              LDR      r0,|L4.416|
00015c  f7fffffe          BL       HAL_GPIO_Init
;;;233    
;;;234        /* Peripheral clock enable */
;;;235        __HAL_RCC_I2C3_CLK_ENABLE();
000160  bf00              NOP      
000162  2000              MOVS     r0,#0
000164  9000              STR      r0,[sp,#0]
000166  4809              LDR      r0,|L4.396|
000168  3010              ADDS     r0,r0,#0x10
00016a  6800              LDR      r0,[r0,#0]
00016c  f4400000          ORR      r0,r0,#0x800000
000170  4906              LDR      r1,|L4.396|
000172  3110              ADDS     r1,r1,#0x10
000174  6008              STR      r0,[r1,#0]
000176  4608              MOV      r0,r1
000178  6800              LDR      r0,[r0,#0]
00017a  f4000000          AND      r0,r0,#0x800000
00017e  9000              STR      r0,[sp,#0]
000180  bf00              NOP      
000182  bf00              NOP      
                  |L4.388|
;;;236      /* USER CODE BEGIN I2C3_MspInit 1 */
;;;237    
;;;238      /* USER CODE END I2C3_MspInit 1 */
;;;239      }
;;;240    
;;;241    }
000184  b006              ADD      sp,sp,#0x18
000186  bd10              POP      {r4,pc}
;;;242    
                          ENDP

                  |L4.392|
                          DCD      0x40005400
                  |L4.396|
                          DCD      0x40023830
                  |L4.400|
                          DCD      0x40020400
                  |L4.404|
                          DCD      0x40005800
                  |L4.408|
                          DCD      0x40005c00
                  |L4.412|
                          DCD      0x40020800
                  |L4.416|
                          DCD      0x40020000

                          AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_MspInit PROC
;;;62       */
;;;63     void HAL_MspInit(void)
000000  b508              PUSH     {r3,lr}
;;;64     {
;;;65       /* USER CODE BEGIN MspInit 0 */
;;;66     
;;;67       /* USER CODE END MspInit 0 */
;;;68     
;;;69       __HAL_RCC_SYSCFG_CLK_ENABLE();
000002  bf00              NOP      
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  4810              LDR      r0,|L5.76|
00000a  6800              LDR      r0,[r0,#0]
00000c  f4404080          ORR      r0,r0,#0x4000
000010  490e              LDR      r1,|L5.76|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f4004080          AND      r0,r0,#0x4000
00001c  9000              STR      r0,[sp,#0]
00001e  bf00              NOP      
000020  bf00              NOP      
;;;70       __HAL_RCC_PWR_CLK_ENABLE();
000022  bf00              NOP      
000024  2000              MOVS     r0,#0
000026  9000              STR      r0,[sp,#0]
000028  1f08              SUBS     r0,r1,#4
00002a  6800              LDR      r0,[r0,#0]
00002c  f0405080          ORR      r0,r0,#0x10000000
000030  1f09              SUBS     r1,r1,#4
000032  6008              STR      r0,[r1,#0]
000034  4608              MOV      r0,r1
000036  6800              LDR      r0,[r0,#0]
000038  f0005080          AND      r0,r0,#0x10000000
00003c  9000              STR      r0,[sp,#0]
00003e  bf00              NOP      
000040  bf00              NOP      
;;;71     
;;;72       HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_3);
000042  2004              MOVS     r0,#4
000044  f7fffffe          BL       HAL_NVIC_SetPriorityGrouping
;;;73     
;;;74       /* System interrupt init*/
;;;75     
;;;76       /* USER CODE BEGIN MspInit 1 */
;;;77     
;;;78       /* USER CODE END MspInit 1 */
;;;79     }
000048  bd08              POP      {r3,pc}
;;;80     
                          ENDP

00004a  0000              DCW      0x0000
                  |L5.76|
                          DCD      0x40023844

                          AREA ||i.HAL_SPI_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspDeInit PROC
;;;356    */
;;;357    void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
000000  b510              PUSH     {r4,lr}
;;;358    {
000002  4604              MOV      r4,r0
;;;359      if(hspi->Instance==SPI3)
000004  4907              LDR      r1,|L6.36|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10a              BNE      |L6.34|
;;;360      {
;;;361      /* USER CODE BEGIN SPI3_MspDeInit 0 */
;;;362    
;;;363      /* USER CODE END SPI3_MspDeInit 0 */
;;;364        /* Peripheral clock disable */
;;;365        __HAL_RCC_SPI3_CLK_DISABLE();
00000c  4806              LDR      r0,|L6.40|
00000e  6800              LDR      r0,[r0,#0]
000010  f4204000          BIC      r0,r0,#0x8000
000014  4904              LDR      r1,|L6.40|
000016  6008              STR      r0,[r1,#0]
;;;366    
;;;367        /**SPI3 GPIO Configuration
;;;368        PC10     ------> SPI3_SCK
;;;369        PC11     ------> SPI3_MISO
;;;370        PC12     ------> SPI3_MOSI
;;;371        */
;;;372        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12);
000018  f44f51e0          MOV      r1,#0x1c00
00001c  4803              LDR      r0,|L6.44|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
                  |L6.34|
;;;373    
;;;374      /* USER CODE BEGIN SPI3_MspDeInit 1 */
;;;375    
;;;376      /* USER CODE END SPI3_MspDeInit 1 */
;;;377      }
;;;378    
;;;379    }
000022  bd10              POP      {r4,pc}
;;;380    
                          ENDP

                  |L6.36|
                          DCD      0x40003c00
                  |L6.40|
                          DCD      0x40023840
                  |L6.44|
                          DCD      0x40020800

                          AREA ||i.HAL_SPI_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspInit PROC
;;;319    */
;;;320    void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
000000  b510              PUSH     {r4,lr}
;;;321    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;322      GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;323      if(hspi->Instance==SPI3)
00000e  491b              LDR      r1,|L7.124|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d130              BNE      |L7.120|
;;;324      {
;;;325      /* USER CODE BEGIN SPI3_MspInit 0 */
;;;326    
;;;327      /* USER CODE END SPI3_MspInit 0 */
;;;328        /* Peripheral clock enable */
;;;329        __HAL_RCC_SPI3_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  4818              LDR      r0,|L7.128|
00001e  6800              LDR      r0,[r0,#0]
000020  f4404000          ORR      r0,r0,#0x8000
000024  4916              LDR      r1,|L7.128|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f4004000          AND      r0,r0,#0x8000
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;330    
;;;331        __HAL_RCC_GPIOC_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4810              LDR      r0,|L7.128|
00003e  3810              SUBS     r0,r0,#0x10
000040  6800              LDR      r0,[r0,#0]
000042  f0400004          ORR      r0,r0,#4
000046  490e              LDR      r1,|L7.128|
000048  3910              SUBS     r1,r1,#0x10
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000004          AND      r0,r0,#4
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;332        /**SPI3 GPIO Configuration
;;;333        PC10     ------> SPI3_SCK
;;;334        PC11     ------> SPI3_MISO
;;;335        PC12     ------> SPI3_MOSI
;;;336        */
;;;337        GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
00005a  f44f50e0          MOV      r0,#0x1c00
00005e  9001              STR      r0,[sp,#4]
;;;338        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;339        GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;340        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000068  2003              MOVS     r0,#3
00006a  9004              STR      r0,[sp,#0x10]
;;;341        GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
00006c  2006              MOVS     r0,#6
00006e  9005              STR      r0,[sp,#0x14]
;;;342        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4804              LDR      r0,|L7.132|
000074  f7fffffe          BL       HAL_GPIO_Init
                  |L7.120|
;;;343    
;;;344      /* USER CODE BEGIN SPI3_MspInit 1 */
;;;345    
;;;346      /* USER CODE END SPI3_MspInit 1 */
;;;347      }
;;;348    
;;;349    }
000078  b006              ADD      sp,sp,#0x18
00007a  bd10              POP      {r4,pc}
;;;350    
                          ENDP

                  |L7.124|
                          DCD      0x40003c00
                  |L7.128|
                          DCD      0x40023840
                  |L7.132|
                          DCD      0x40020800

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;452    */
;;;453    void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
000000  b510              PUSH     {r4,lr}
;;;454    {
000002  4604              MOV      r4,r0
;;;455      if(huart->Instance==USART1)
000004  4913              LDR      r1,|L8.84|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10e              BNE      |L8.42|
;;;456      {
;;;457      /* USER CODE BEGIN USART1_MspDeInit 0 */
;;;458    
;;;459      /* USER CODE END USART1_MspDeInit 0 */
;;;460        /* Peripheral clock disable */
;;;461        __HAL_RCC_USART1_CLK_DISABLE();
00000c  4812              LDR      r0,|L8.88|
00000e  6800              LDR      r0,[r0,#0]
000010  f0200010          BIC      r0,r0,#0x10
000014  4910              LDR      r1,|L8.88|
000016  6008              STR      r0,[r1,#0]
;;;462    
;;;463        /**USART1 GPIO Configuration
;;;464        PA9     ------> USART1_TX
;;;465        PA10     ------> USART1_RX
;;;466        */
;;;467        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
000018  f44f61c0          MOV      r1,#0x600
00001c  480f              LDR      r0,|L8.92|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;468    
;;;469        /* USART1 interrupt DeInit */
;;;470        HAL_NVIC_DisableIRQ(USART1_IRQn);
000022  2025              MOVS     r0,#0x25
000024  f7fffffe          BL       HAL_NVIC_DisableIRQ
000028  e012              B        |L8.80|
                  |L8.42|
;;;471      /* USER CODE BEGIN USART1_MspDeInit 1 */
;;;472    
;;;473      /* USER CODE END USART1_MspDeInit 1 */
;;;474      }
;;;475      else if(huart->Instance==USART2)
00002a  490d              LDR      r1,|L8.96|
00002c  6820              LDR      r0,[r4,#0]
00002e  4288              CMP      r0,r1
000030  d10e              BNE      |L8.80|
;;;476      {
;;;477      /* USER CODE BEGIN USART2_MspDeInit 0 */
;;;478    
;;;479      /* USER CODE END USART2_MspDeInit 0 */
;;;480        /* Peripheral clock disable */
;;;481        __HAL_RCC_USART2_CLK_DISABLE();
000032  4809              LDR      r0,|L8.88|
000034  1f00              SUBS     r0,r0,#4
000036  6800              LDR      r0,[r0,#0]
000038  f4203000          BIC      r0,r0,#0x20000
00003c  4906              LDR      r1,|L8.88|
00003e  1f09              SUBS     r1,r1,#4
000040  6008              STR      r0,[r1,#0]
;;;482    
;;;483        /**USART2 GPIO Configuration
;;;484        PA2     ------> USART2_TX
;;;485        PA3     ------> USART2_RX
;;;486        */
;;;487        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
000042  210c              MOVS     r1,#0xc
000044  4805              LDR      r0,|L8.92|
000046  f7fffffe          BL       HAL_GPIO_DeInit
;;;488    
;;;489        /* USART2 interrupt DeInit */
;;;490        HAL_NVIC_DisableIRQ(USART2_IRQn);
00004a  2026              MOVS     r0,#0x26
00004c  f7fffffe          BL       HAL_NVIC_DisableIRQ
                  |L8.80|
;;;491      /* USER CODE BEGIN USART2_MspDeInit 1 */
;;;492    
;;;493      /* USER CODE END USART2_MspDeInit 1 */
;;;494      }
;;;495    
;;;496    }
000050  bd10              POP      {r4,pc}
;;;497    
                          ENDP

000052  0000              DCW      0x0000
                  |L8.84|
                          DCD      0x40011000
                  |L8.88|
                          DCD      0x40023844
                  |L8.92|
                          DCD      0x40020000
                  |L8.96|
                          DCD      0x40004400

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;386    */
;;;387    void HAL_UART_MspInit(UART_HandleTypeDef* huart)
000000  b510              PUSH     {r4,lr}
;;;388    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;389      GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;390      if(huart->Instance==USART1)
00000e  493f              LDR      r1,|L9.268|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d139              BNE      |L9.138|
;;;391      {
;;;392      /* USER CODE BEGIN USART1_MspInit 0 */
;;;393    
;;;394      /* USER CODE END USART1_MspInit 0 */
;;;395        /* Peripheral clock enable */
;;;396        __HAL_RCC_USART1_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  483c              LDR      r0,|L9.272|
00001e  6800              LDR      r0,[r0,#0]
000020  f0400010          ORR      r0,r0,#0x10
000024  493a              LDR      r1,|L9.272|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0000010          AND      r0,r0,#0x10
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;397    
;;;398        __HAL_RCC_GPIOA_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4834              LDR      r0,|L9.272|
00003e  3814              SUBS     r0,r0,#0x14
000040  6800              LDR      r0,[r0,#0]
000042  f0400001          ORR      r0,r0,#1
000046  4932              LDR      r1,|L9.272|
000048  3914              SUBS     r1,r1,#0x14
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000001          AND      r0,r0,#1
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;399        /**USART1 GPIO Configuration
;;;400        PA9     ------> USART1_TX
;;;401        PA10     ------> USART1_RX
;;;402        */
;;;403        GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
00005a  f44f60c0          MOV      r0,#0x600
00005e  9001              STR      r0,[sp,#4]
;;;404        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;405        GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;406        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
000068  2002              MOVS     r0,#2
00006a  9004              STR      r0,[sp,#0x10]
;;;407        GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
00006c  2007              MOVS     r0,#7
00006e  9005              STR      r0,[sp,#0x14]
;;;408        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4828              LDR      r0,|L9.276|
000074  f7fffffe          BL       HAL_GPIO_Init
;;;409    
;;;410        /* USART1 interrupt Init */
;;;411        HAL_NVIC_SetPriority(USART1_IRQn, 3, 1);
000078  2201              MOVS     r2,#1
00007a  2103              MOVS     r1,#3
00007c  2025              MOVS     r0,#0x25
00007e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;412        HAL_NVIC_EnableIRQ(USART1_IRQn);
000082  2025              MOVS     r0,#0x25
000084  f7fffffe          BL       HAL_NVIC_EnableIRQ
000088  e03d              B        |L9.262|
                  |L9.138|
;;;413      /* USER CODE BEGIN USART1_MspInit 1 */
;;;414    
;;;415      /* USER CODE END USART1_MspInit 1 */
;;;416      }
;;;417      else if(huart->Instance==USART2)
00008a  4923              LDR      r1,|L9.280|
00008c  6820              LDR      r0,[r4,#0]
00008e  4288              CMP      r0,r1
000090  d139              BNE      |L9.262|
;;;418      {
;;;419      /* USER CODE BEGIN USART2_MspInit 0 */
;;;420    
;;;421      /* USER CODE END USART2_MspInit 0 */
;;;422        /* Peripheral clock enable */
;;;423        __HAL_RCC_USART2_CLK_ENABLE();
000092  bf00              NOP      
000094  2000              MOVS     r0,#0
000096  9000              STR      r0,[sp,#0]
000098  481d              LDR      r0,|L9.272|
00009a  1f00              SUBS     r0,r0,#4
00009c  6800              LDR      r0,[r0,#0]
00009e  f4403000          ORR      r0,r0,#0x20000
0000a2  491b              LDR      r1,|L9.272|
0000a4  1f09              SUBS     r1,r1,#4
0000a6  6008              STR      r0,[r1,#0]
0000a8  4608              MOV      r0,r1
0000aa  6800              LDR      r0,[r0,#0]
0000ac  f4003000          AND      r0,r0,#0x20000
0000b0  9000              STR      r0,[sp,#0]
0000b2  bf00              NOP      
0000b4  bf00              NOP      
;;;424    
;;;425        __HAL_RCC_GPIOA_CLK_ENABLE();
0000b6  bf00              NOP      
0000b8  2000              MOVS     r0,#0
0000ba  9000              STR      r0,[sp,#0]
0000bc  4814              LDR      r0,|L9.272|
0000be  3814              SUBS     r0,r0,#0x14
0000c0  6800              LDR      r0,[r0,#0]
0000c2  f0400001          ORR      r0,r0,#1
0000c6  4912              LDR      r1,|L9.272|
0000c8  3914              SUBS     r1,r1,#0x14
0000ca  6008              STR      r0,[r1,#0]
0000cc  4608              MOV      r0,r1
0000ce  6800              LDR      r0,[r0,#0]
0000d0  f0000001          AND      r0,r0,#1
0000d4  9000              STR      r0,[sp,#0]
0000d6  bf00              NOP      
0000d8  bf00              NOP      
;;;426        /**USART2 GPIO Configuration
;;;427        PA2     ------> USART2_TX
;;;428        PA3     ------> USART2_RX
;;;429        */
;;;430        GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
0000da  200c              MOVS     r0,#0xc
0000dc  9001              STR      r0,[sp,#4]
;;;431        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
0000de  2002              MOVS     r0,#2
0000e0  9002              STR      r0,[sp,#8]
;;;432        GPIO_InitStruct.Pull = GPIO_NOPULL;
0000e2  2000              MOVS     r0,#0
0000e4  9003              STR      r0,[sp,#0xc]
;;;433        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
0000e6  2003              MOVS     r0,#3
0000e8  9004              STR      r0,[sp,#0x10]
;;;434        GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
0000ea  2007              MOVS     r0,#7
0000ec  9005              STR      r0,[sp,#0x14]
;;;435        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
0000ee  a901              ADD      r1,sp,#4
0000f0  4808              LDR      r0,|L9.276|
0000f2  f7fffffe          BL       HAL_GPIO_Init
;;;436    
;;;437        /* USART2 interrupt Init */
;;;438        HAL_NVIC_SetPriority(USART2_IRQn, 3, 0);
0000f6  2200              MOVS     r2,#0
0000f8  2103              MOVS     r1,#3
0000fa  2026              MOVS     r0,#0x26
0000fc  f7fffffe          BL       HAL_NVIC_SetPriority
;;;439        HAL_NVIC_EnableIRQ(USART2_IRQn);
000100  2026              MOVS     r0,#0x26
000102  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L9.262|
;;;440      /* USER CODE BEGIN USART2_MspInit 1 */
;;;441    
;;;442      /* USER CODE END USART2_MspInit 1 */
;;;443      }
;;;444    
;;;445    }
000106  b006              ADD      sp,sp,#0x18
000108  bd10              POP      {r4,pc}
;;;446    
                          ENDP

00010a  0000              DCW      0x0000
                  |L9.268|
                          DCD      0x40011000
                  |L9.272|
                          DCD      0x40023844
                  |L9.276|
                          DCD      0x40020000
                  |L9.280|
                          DCD      0x40004400

;*** Start embedded assembler ***

#line 1 "C:\\Users\\LENOVO\\Desktop\\slavecontroller\\RTE\\Device\\STM32F407ZETx\\STCubeGenerated\\Src\\stm32f4xx_hal_msp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REV16|
#line 388 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REVSH|
#line 402
|__asm___19_stm32f4xx_hal_msp_c_d46e2bee____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f4xx_hal_msp_c_d46e2bee____RRX|
#line 587
|__asm___19_stm32f4xx_hal_msp_c_d46e2bee____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
