; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\temperaturedriver.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\temperaturedriver.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I.\etherCAT -I.\Power -I.\CRC -IC:\Users\LENOVO\Desktop\slavecontroller\RTE -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx -IC:\Users\LENOVO\Desktop\slavecontroller\RTE\Device\STM32F407ZETx\STCubeGenerated\Inc -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.16.0\Drivers\STM32F4xx_HAL_Driver\Inc -ISTCubeGenerated\Inc -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F407xx --omf_browse=.\objects\temperaturedriver.crf Power\TemperatureDriver.c]
                          THUMB

                          AREA ||i.look_up_table||, CODE, READONLY, ALIGN=1

                  look_up_table PROC
;;;37     //查表函数
;;;38     uint8_t look_up_table(uint16_t *a,uint8_t ArrayLong,uint16_t data)
000000  b5f0              PUSH     {r4-r7,lr}
;;;39     {    
000002  4603              MOV      r3,r0
000004  460e              MOV      r6,r1
;;;40     	uint16_t begin,end,middle ;  
;;;41     	uint8_t i ;  
;;;42     	begin = 0 ;  
000006  2400              MOVS     r4,#0
;;;43     	end = ArrayLong-1 ;  
000008  1e70              SUBS     r0,r6,#1
00000a  b285              UXTH     r5,r0
;;;44     	i = 0  ;  
00000c  2700              MOVS     r7,#0
;;;45     	if(data >= a[begin]) return begin ;  
00000e  f8330014          LDRH     r0,[r3,r4,LSL #1]
000012  4290              CMP      r0,r2
000014  dc01              BGT      |L1.26|
000016  b2e0              UXTB     r0,r4
                  |L1.24|
;;;46     	else if(data <= a[end]) return end ;  
;;;47     	while(begin < end)  
;;;48     	{  
;;;49     		middle = (begin+end)/2 ;  
;;;50     		if(data == a[middle] ) break ;  
;;;51     		if(data < a[middle] && data > a[middle+1]) break ;   
;;;52     		if(data > a[middle])  end = middle ;                      
;;;53     		else begin = middle ;      
;;;54     		if(i++ > ArrayLong) break ;  
;;;55     	}  
;;;56     	if(begin > end ) return 0 ;   
;;;57     	return middle ;  
;;;58     }
000018  bdf0              POP      {r4-r7,pc}
                  |L1.26|
00001a  f8330015          LDRH     r0,[r3,r5,LSL #1]     ;46
00001e  4290              CMP      r0,r2                 ;46
000020  db01              BLT      |L1.38|
000022  b2e8              UXTB     r0,r5                 ;46
000024  e7f8              B        |L1.24|
                  |L1.38|
000026  e022              B        |L1.110|
                  |L1.40|
000028  1960              ADDS     r0,r4,r5              ;49
00002a  eb007cd0          ADD      r12,r0,r0,LSR #31     ;49
00002e  f3cc014f          UBFX     r1,r12,#1,#16         ;49
000032  f8330011          LDRH     r0,[r3,r1,LSL #1]     ;50
000036  4290              CMP      r0,r2                 ;50
000038  d100              BNE      |L1.60|
00003a  e01a              B        |L1.114|
                  |L1.60|
00003c  f8330011          LDRH     r0,[r3,r1,LSL #1]     ;51
000040  4290              CMP      r0,r2                 ;51
000042  dd05              BLE      |L1.80|
000044  1c48              ADDS     r0,r1,#1              ;51
000046  f8330010          LDRH     r0,[r3,r0,LSL #1]     ;51
00004a  4290              CMP      r0,r2                 ;51
00004c  da00              BGE      |L1.80|
00004e  e010              B        |L1.114|
                  |L1.80|
000050  f8330011          LDRH     r0,[r3,r1,LSL #1]     ;52
000054  4290              CMP      r0,r2                 ;52
000056  da01              BGE      |L1.92|
000058  460d              MOV      r5,r1                 ;52
00005a  e000              B        |L1.94|
                  |L1.92|
00005c  460c              MOV      r4,r1                 ;53
                  |L1.94|
00005e  4638              MOV      r0,r7                 ;54
000060  f1070c01          ADD      r12,r7,#1             ;54
000064  f00c07ff          AND      r7,r12,#0xff          ;54
000068  42b0              CMP      r0,r6                 ;54
00006a  dd00              BLE      |L1.110|
00006c  e001              B        |L1.114|
                  |L1.110|
00006e  42ac              CMP      r4,r5                 ;47
000070  dbda              BLT      |L1.40|
                  |L1.114|
000072  bf00              NOP                            ;50
000074  42ac              CMP      r4,r5                 ;56
000076  dd01              BLE      |L1.124|
000078  2000              MOVS     r0,#0                 ;56
00007a  e7cd              B        |L1.24|
                  |L1.124|
00007c  b2c8              UXTB     r0,r1                 ;57
00007e  e7cb              B        |L1.24|
;;;59     
                          ENDP


                          AREA ||i.num_to_temperature||, CODE, READONLY, ALIGN=1

                  num_to_temperature PROC
;;;61     //输入表的序号值，得到温度值
;;;62     float num_to_temperature(uint8_t num)
000000  eb000180          ADD      r1,r0,r0,LSL #2
;;;63     {
;;;64     	float  data;
;;;65     	data = 5*num-20;
000004  3914              SUBS     r1,r1,#0x14
000006  ee001a90          VMOV     s1,r1
00000a  eef80ae0          VCVT.F32.S32 s1,s1
00000e  eeb00a60          VMOV.F32 s0,s1
;;;66     	return data;
;;;67     }
000012  4770              BX       lr
;;;68     
                          ENDP


                          AREA ||i.save_ntc2_data||, CODE, READONLY, ALIGN=2

                  save_ntc2_data PROC
;;;84     
;;;85     void save_ntc2_data(uint16_t data)
000000  b570              PUSH     {r4-r6,lr}
;;;86     {
000002  ed2d8b0e          VPUSH    {d8-d14}
000006  4604              MOV      r4,r0
;;;87     	uint8_t num;
;;;88     	float t1,tx;	
;;;89     	
;;;90     	if( (data<=NTCTAB2[0]) && (data>NTCTAB2[24]))
000008  4828              LDR      r0,|L3.172|
00000a  8800              LDRH     r0,[r0,#0]  ; NTCTAB2
00000c  42a0              CMP      r0,r4
00000e  db4a              BLT      |L3.166|
000010  4826              LDR      r0,|L3.172|
000012  8e00              LDRH     r0,[r0,#0x30]  ; NTCTAB2
000014  42a0              CMP      r0,r4
000016  da46              BGE      |L3.166|
;;;91     	{
;;;92     		num=look_up_table(NTCTAB2,25,data);
000018  4622              MOV      r2,r4
00001a  2119              MOVS     r1,#0x19
00001c  4823              LDR      r0,|L3.172|
00001e  f7fffffe          BL       look_up_table
000022  4605              MOV      r5,r0
;;;93     		t1=num_to_temperature(num);
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       num_to_temperature
00002a  eef08a40          VMOV.F32 s17,s0
;;;94     		tx=5.0*(NTCTAB2[num]-data)/(NTCTAB2[num]-NTCTAB2[num+1])+t1;
00002e  ee180a90          VMOV     r0,s17
000032  f7fffffe          BL       __aeabi_f2d
000036  ec410b1a          VMOV     d10,r0,r1
00003a  491c              LDR      r1,|L3.172|
00003c  f8312015          LDRH     r2,[r1,r5,LSL #1]
000040  460b              MOV      r3,r1
000042  1c69              ADDS     r1,r5,#1
000044  f8331011          LDRH     r1,[r3,r1,LSL #1]
000048  1a50              SUBS     r0,r2,r1
00004a  f7fffffe          BL       __aeabi_i2d
00004e  ec410b1c          VMOV     d12,r0,r1
000052  4916              LDR      r1,|L3.172|
000054  f8311015          LDRH     r1,[r1,r5,LSL #1]
000058  1b08              SUBS     r0,r1,r4
00005a  f7fffffe          BL       __aeabi_i2d
00005e  ec410b1e          VMOV     d14,r0,r1
000062  ed9f0b13          VLDR     d0,|L3.176|
000066  ec532b10          VMOV     r2,r3,d0
00006a  f7fffffe          BL       __aeabi_dmul
00006e  ec410b1d          VMOV     d13,r0,r1
000072  ec532b1c          VMOV     r2,r3,d12
000076  f7fffffe          BL       __aeabi_ddiv
00007a  ec410b1b          VMOV     d11,r0,r1
00007e  ec532b1a          VMOV     r2,r3,d10
000082  f7fffffe          BL       __aeabi_dadd
000086  ec410b19          VMOV     d9,r0,r1
00008a  f7fffffe          BL       __aeabi_d2f
00008e  ee080a10          VMOV     s16,r0
;;;95     		power_manage.temperature = tx*10;
000092  eeb20a04          VMOV.F32 s0,#10.00000000
000096  ee280a00          VMUL.F32 s0,s16,s0
00009a  eebc0ac0          VCVT.U32.F32 s0,s0
00009e  ee100a10          VMOV     r0,s0
0000a2  4905              LDR      r1,|L3.184|
0000a4  70c8              STRB     r0,[r1,#3]
                  |L3.166|
;;;96     	}
;;;97     }
0000a6  ecbd8b0e          VPOP     {d8-d14}
0000aa  bd70              POP      {r4-r6,pc}
;;;98     
                          ENDP

                  |L3.172|
                          DCD      NTCTAB2
                  |L3.176|
0000b0  00000000          DCFD     0x4014000000000000 ; 5
0000b4  40140000
                  |L3.184|
                          DCD      power_manage

                          AREA ||i.save_ntc_data||, CODE, READONLY, ALIGN=2

                  save_ntc_data PROC
;;;70     //
;;;71     void save_ntc_data(uint16_t data)
000000  b570              PUSH     {r4-r6,lr}
;;;72     {
000002  ed2d8b0e          VPUSH    {d8-d14}
000006  4604              MOV      r4,r0
;;;73     	uint8_t num;
;;;74     	float t1,tx;	
;;;75     	
;;;76     	if( (data<=NTCTAB[0]) && (data>NTCTAB[24]))
000008  4823              LDR      r0,|L4.152|
00000a  8800              LDRH     r0,[r0,#0]  ; NTCTAB
00000c  42a0              CMP      r0,r4
00000e  db3f              BLT      |L4.144|
000010  4821              LDR      r0,|L4.152|
000012  8e00              LDRH     r0,[r0,#0x30]  ; NTCTAB
000014  42a0              CMP      r0,r4
000016  da3b              BGE      |L4.144|
;;;77     	{
;;;78     		num=look_up_table(NTCTAB,25,data);
000018  4622              MOV      r2,r4
00001a  2119              MOVS     r1,#0x19
00001c  481e              LDR      r0,|L4.152|
00001e  f7fffffe          BL       look_up_table
000022  4605              MOV      r5,r0
;;;79     		t1=num_to_temperature(num);
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       num_to_temperature
00002a  eeb08a40          VMOV.F32 s16,s0
;;;80     		tx=5.0*(NTCTAB[num]-data)/(NTCTAB[num]-NTCTAB[num+1])+t1;
00002e  ee180a10          VMOV     r0,s16
000032  f7fffffe          BL       __aeabi_f2d
000036  ec410b1a          VMOV     d10,r0,r1
00003a  4917              LDR      r1,|L4.152|
00003c  f8312015          LDRH     r2,[r1,r5,LSL #1]
000040  460b              MOV      r3,r1
000042  1c69              ADDS     r1,r5,#1
000044  f8331011          LDRH     r1,[r3,r1,LSL #1]
000048  1a50              SUBS     r0,r2,r1
00004a  f7fffffe          BL       __aeabi_i2d
00004e  ec410b1c          VMOV     d12,r0,r1
000052  4911              LDR      r1,|L4.152|
000054  f8311015          LDRH     r1,[r1,r5,LSL #1]
000058  1b08              SUBS     r0,r1,r4
00005a  f7fffffe          BL       __aeabi_i2d
00005e  ec410b1e          VMOV     d14,r0,r1
000062  ed9f0b0e          VLDR     d0,|L4.156|
000066  ec532b10          VMOV     r2,r3,d0
00006a  f7fffffe          BL       __aeabi_dmul
00006e  ec410b1d          VMOV     d13,r0,r1
000072  ec532b1c          VMOV     r2,r3,d12
000076  f7fffffe          BL       __aeabi_ddiv
00007a  ec410b1b          VMOV     d11,r0,r1
00007e  ec532b1a          VMOV     r2,r3,d10
000082  f7fffffe          BL       __aeabi_dadd
000086  ec410b19          VMOV     d9,r0,r1
00008a  f7fffffe          BL       __aeabi_d2f
00008e  4606              MOV      r6,r0
                  |L4.144|
;;;81     //		power_manage.temperature_ntc = tx*10;		//新版本未接	
;;;82     	}
;;;83     }
000090  ecbd8b0e          VPOP     {d8-d14}
000094  bd70              POP      {r4-r6,pc}
;;;84     
                          ENDP

000096  0000              DCW      0x0000
                  |L4.152|
                          DCD      NTCTAB
                  |L4.156|
00009c  00000000          DCFD     0x4014000000000000 ; 5
0000a0  40140000

                          AREA ||.data||, DATA, ALIGN=1

                  NTCTAB
000000  65b664ee          DCW      0x65b6,0x64ee
000004  63fd62dd          DCW      0x63fd,0x62dd
000008  618a5fff          DCW      0x618a,0x5fff
00000c  5e355c29          DCW      0x5e35,0x5c29
000010  59d6573d          DCW      0x59d6,0x573d
000014  545e513f          DCW      0x545e,0x513f
000018  4de54a5a          DCW      0x4de5,0x4a5a
00001c  46a742d8          DCW      0x46a7,0x42d8
000020  3ef73b10          DCW      0x3ef7,0x3b10
000024  372d335a          DCW      0x372d,0x335a
000028  2f9f2c05          DCW      0x2f9f,0x2c05
00002c  28942552          DCW      0x2894,0x2552
000030  2242              DCW      0x2242
                  NTCTAB2
000032  91c7              DCW      0x91c7
000034  8dd788f6          DCW      0x8dd7,0x88f6
000038  83137c29          DCW      0x8313,0x7c29
00003c  74466b90          DCW      0x7446,0x6b90
000040  623e5897          DCW      0x623e,0x5897
000044  4ee8457b          DCW      0x4ee8,0x457b
000048  3c903454          DCW      0x3c90,0x3454
00004c  2ce4264c          DCW      0x2ce4,0x264c
000050  20881b8f          DCW      0x2088,0x1b8f
000054  174f13b3          DCW      0x174f,0x13b3
000058  10a70e17          DCW      0x10a7,0x0e17
00005c  0bef0a21          DCW      0x0bef,0x0a21
000060  089d0757          DCW      0x089d,0x0757

;*** Start embedded assembler ***

#line 1 "Power\\TemperatureDriver.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_TemperatureDriver_c_43304826____REV16|
#line 388 "D:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_TemperatureDriver_c_43304826____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_TemperatureDriver_c_43304826____REVSH|
#line 402
|__asm___19_TemperatureDriver_c_43304826____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_TemperatureDriver_c_43304826____RRX|
#line 587
|__asm___19_TemperatureDriver_c_43304826____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
